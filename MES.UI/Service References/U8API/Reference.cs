//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace LanyunLanyunMES.UI.U8API {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="U8API.IU8Operation")]
    public interface IU8Operation {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IU8Operation/PuStoreInAdd", ReplyAction="http://tempuri.org/IU8Operation/PuStoreInAddResponse")]
        string PuStoreInAdd(string pmrGuid, int autoid, string maker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IU8Operation/PuStoreInAdd2", ReplyAction="http://tempuri.org/IU8Operation/PuStoreInAdd2Response")]
        string PuStoreInAdd2(string rdGuid, string maker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IU8Operation/PuStoreInAdd3", ReplyAction="http://tempuri.org/IU8Operation/PuStoreInAdd3Response")]
        string PuStoreInAdd3(string pmGuid, int autoid, string maker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IU8Operation/PuStoreInByTV", ReplyAction="http://tempuri.org/IU8Operation/PuStoreInByTVResponse")]
        string PuStoreInByTV(string guid, string maker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IU8Operation/TransVouch", ReplyAction="http://tempuri.org/IU8Operation/TransVouchResponse")]
        string TransVouch(string guid, string maker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IU8Operation/AuditMaterialPlan", ReplyAction="http://tempuri.org/IU8Operation/AuditMaterialPlanResponse")]
        void AuditMaterialPlan(string mpGuid, string cmaker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IU8Operation/UnAuditMaterialPlan", ReplyAction="http://tempuri.org/IU8Operation/UnAuditMaterialPlanResponse")]
        void UnAuditMaterialPlan(string mpGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IU8Operation/MergeMaterialOutAdd", ReplyAction="http://tempuri.org/IU8Operation/MergeMaterialOutAddResponse")]
        string MergeMaterialOutAdd(string guid, string cMaker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IU8Operation/ProductIn", ReplyAction="http://tempuri.org/IU8Operation/ProductInResponse")]
        string ProductIn(string cardNo, string OpSeq);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IU8OperationChannel : LanyunLanyunMES.UI.U8API.IU8Operation, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class U8OperationClient : System.ServiceModel.ClientBase<LanyunLanyunMES.UI.U8API.IU8Operation>, LanyunLanyunMES.UI.U8API.IU8Operation {
        
        public U8OperationClient() {
        }
        
        public U8OperationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public U8OperationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public U8OperationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public U8OperationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string PuStoreInAdd(string pmrGuid, int autoid, string maker) {
            return base.Channel.PuStoreInAdd(pmrGuid, autoid, maker);
        }
        
        public string PuStoreInAdd2(string rdGuid, string maker) {
            return base.Channel.PuStoreInAdd2(rdGuid, maker);
        }
        
        public string PuStoreInAdd3(string pmGuid, int autoid, string maker) {
            return base.Channel.PuStoreInAdd3(pmGuid, autoid, maker);
        }
        
        public string PuStoreInByTV(string guid, string maker) {
            return base.Channel.PuStoreInByTV(guid, maker);
        }
        
        public string TransVouch(string guid, string maker) {
            return base.Channel.TransVouch(guid, maker);
        }
        
        public void AuditMaterialPlan(string mpGuid, string cmaker) {
            base.Channel.AuditMaterialPlan(mpGuid, cmaker);
        }
        
        public void UnAuditMaterialPlan(string mpGuid) {
            base.Channel.UnAuditMaterialPlan(mpGuid);
        }
        
        public string MergeMaterialOutAdd(string guid, string cMaker) {
            return base.Channel.MergeMaterialOutAdd(guid, cMaker);
        }
        
        public string ProductIn(string cardNo, string OpSeq) {
            return base.Channel.ProductIn(cardNo, OpSeq);
        }
    }
}
