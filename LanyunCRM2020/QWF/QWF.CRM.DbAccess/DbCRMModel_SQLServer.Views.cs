//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(QWF.CRM.DbAccess.DbCRMContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets8e5c1f165fdb37b0a17403ba8fd380d5e27c7ca7f135c7881832a57ad5c863cf))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")]
    internal sealed class ViewsForBaseEntitySets8e5c1f165fdb37b0a17403ba8fd380d5e27c7ca7f135c7881832a57ad5c863cf : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "8e5c1f165fdb37b0a17403ba8fd380d5e27c7ca7f135c7881832a57ad5c863cf"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QCRM_CustomerProduct")
            {
                return GetView0();
            }

            if (extentName == "DbCRMContext.T_QCRM_CustomerProduct")
            {
                return GetView1();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QCRM_ListInForm")
            {
                return GetView2();
            }

            if (extentName == "DbCRMContext.T_QCRM_ListInForm")
            {
                return GetView3();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QCRM_Product")
            {
                return GetView4();
            }

            if (extentName == "DbCRMContext.T_QCRM_Product")
            {
                return GetView5();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QCRM_ProductItem")
            {
                return GetView6();
            }

            if (extentName == "DbCRMContext.T_QCRM_ProductItem")
            {
                return GetView7();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QCRM_QuickSreach")
            {
                return GetView8();
            }

            if (extentName == "DbCRMContext.T_QCRM_QuickSreach")
            {
                return GetView9();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QCRM_QuickSreachUser")
            {
                return GetView10();
            }

            if (extentName == "DbCRMContext.T_QCRM_QuickSreachUser")
            {
                return GetView11();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QCRM_Tabs")
            {
                return GetView12();
            }

            if (extentName == "DbCRMContext.T_QCRM_Tabs")
            {
                return GetView13();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QCRM_UserInForm")
            {
                return GetView14();
            }

            if (extentName == "DbCRMContext.T_QCRM_UserInForm")
            {
                return GetView15();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QCRM_UserQueryListSetting")
            {
                return GetView16();
            }

            if (extentName == "DbCRMContext.T_QCRM_UserQueryListSetting")
            {
                return GetView17();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QCRM_UserQuerySetting")
            {
                return GetView18();
            }

            if (extentName == "DbCRMContext.T_QCRM_UserQuerySetting")
            {
                return GetView19();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QWF_Config")
            {
                return GetView20();
            }

            if (extentName == "DbCRMContext.T_QWF_Config")
            {
                return GetView21();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QWF_LoginLog")
            {
                return GetView22();
            }

            if (extentName == "DbCRMContext.T_QWF_LoginLog")
            {
                return GetView23();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QWF_Menu")
            {
                return GetView24();
            }

            if (extentName == "DbCRMContext.T_QWF_Menu")
            {
                return GetView25();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QWF_MenuInUrl")
            {
                return GetView26();
            }

            if (extentName == "DbCRMContext.T_QWF_MenuInUrl")
            {
                return GetView27();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QWF_Org")
            {
                return GetView28();
            }

            if (extentName == "DbCRMContext.T_QWF_Org")
            {
                return GetView29();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QWF_Resource")
            {
                return GetView30();
            }

            if (extentName == "DbCRMContext.T_QWF_Resource")
            {
                return GetView31();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QWF_Role")
            {
                return GetView32();
            }

            if (extentName == "DbCRMContext.T_QWF_Role")
            {
                return GetView33();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QWF_RoleGroup")
            {
                return GetView34();
            }

            if (extentName == "DbCRMContext.T_QWF_RoleGroup")
            {
                return GetView35();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QWF_RoleInMenu")
            {
                return GetView36();
            }

            if (extentName == "DbCRMContext.T_QWF_RoleInMenu")
            {
                return GetView37();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QWF_RoleInResource")
            {
                return GetView38();
            }

            if (extentName == "DbCRMContext.T_QWF_RoleInResource")
            {
                return GetView39();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QWF_Seq")
            {
                return GetView40();
            }

            if (extentName == "DbCRMContext.T_QWF_Seq")
            {
                return GetView41();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QWF_User")
            {
                return GetView42();
            }

            if (extentName == "DbCRMContext.T_QWF_User")
            {
                return GetView43();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QWF_UserActionLog")
            {
                return GetView44();
            }

            if (extentName == "DbCRMContext.T_QWF_UserActionLog")
            {
                return GetView45();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QWF_UserInRole")
            {
                return GetView46();
            }

            if (extentName == "DbCRMContext.T_QWF_UserInRole")
            {
                return GetView47();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.vw_UserInRoles")
            {
                return GetView48();
            }

            if (extentName == "DbCRMContext.vw_UserInRoles")
            {
                return GetView49();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QCRM_FormInput")
            {
                return GetView50();
            }

            if (extentName == "DbCRMContext.T_QCRM_FormInput")
            {
                return GetView51();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QCRM_Tables")
            {
                return GetView52();
            }

            if (extentName == "DbCRMContext.T_QCRM_Tables")
            {
                return GetView53();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QCRM_ListType")
            {
                return GetView54();
            }

            if (extentName == "DbCRMContext.T_QCRM_ListType")
            {
                return GetView55();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QCRM_Fields")
            {
                return GetView56();
            }

            if (extentName == "DbCRMContext.T_QCRM_Fields")
            {
                return GetView57();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QCRM_Dictionary")
            {
                return GetView58();
            }

            if (extentName == "DbCRMContext.T_QCRM_Dictionary")
            {
                return GetView59();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QCRM_UserCenter")
            {
                return GetView60();
            }

            if (extentName == "DbCRMContext.T_QCRM_UserCenter")
            {
                return GetView61();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QCRM_Form")
            {
                return GetView62();
            }

            if (extentName == "DbCRMContext.T_QCRM_Form")
            {
                return GetView63();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QCRM_RoleInQueryCategory")
            {
                return GetView64();
            }

            if (extentName == "DbCRMContext.T_QCRM_RoleInQueryCategory")
            {
                return GetView65();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QCRM_QueryList")
            {
                return GetView66();
            }

            if (extentName == "DbCRMContext.T_QCRM_QueryList")
            {
                return GetView67();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QCRM_QueryCategory")
            {
                return GetView68();
            }

            if (extentName == "DbCRMContext.T_QCRM_QueryCategory")
            {
                return GetView69();
            }

            if (extentName == "DbCRMkEntity_SQLServerStoreContainer.T_QCRM_QueryWhere")
            {
                return GetView70();
            }

            if (extentName == "DbCRMContext.T_QCRM_QueryWhere")
            {
                return GetView71();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QCRM_CustomerProduct.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_CustomerProduct
        [DbCRMkEntity_SQLServer.Store.T_QCRM_CustomerProduct](T1.[T_QCRM_CustomerProduct.Id], T1.[T_QCRM_CustomerProduct.CustomerCode], T1.[T_QCRM_CustomerProduct.ProductCode], T1.[T_QCRM_CustomerProduct.ProductItemId], T1.[T_QCRM_CustomerProduct.Remarks], T1.[T_QCRM_CustomerProduct.CreateTime], T1.[T_QCRM_CustomerProduct.CreateUser], T1.[T_QCRM_CustomerProduct.UpdateTime], T1.[T_QCRM_CustomerProduct.UpdateUser], T1.[T_QCRM_CustomerProduct.BeginTime], T1.[T_QCRM_CustomerProduct.EndTime])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_CustomerProduct.Id], 
            T.CustomerCode AS [T_QCRM_CustomerProduct.CustomerCode], 
            T.ProductCode AS [T_QCRM_CustomerProduct.ProductCode], 
            T.ProductItemId AS [T_QCRM_CustomerProduct.ProductItemId], 
            T.Remarks AS [T_QCRM_CustomerProduct.Remarks], 
            T.CreateTime AS [T_QCRM_CustomerProduct.CreateTime], 
            T.CreateUser AS [T_QCRM_CustomerProduct.CreateUser], 
            T.UpdateTime AS [T_QCRM_CustomerProduct.UpdateTime], 
            T.UpdateUser AS [T_QCRM_CustomerProduct.UpdateUser], 
            T.BeginTime AS [T_QCRM_CustomerProduct.BeginTime], 
            T.EndTime AS [T_QCRM_CustomerProduct.EndTime], 
            True AS _from0
        FROM DbCRMContext.T_QCRM_CustomerProduct AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QCRM_CustomerProduct.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_CustomerProduct
        [DbCRMkEntity_SQLServer.T_QCRM_CustomerProduct](T1.[T_QCRM_CustomerProduct.Id], T1.[T_QCRM_CustomerProduct.CustomerCode], T1.[T_QCRM_CustomerProduct.ProductCode], T1.[T_QCRM_CustomerProduct.ProductItemId], T1.[T_QCRM_CustomerProduct.Remarks], T1.[T_QCRM_CustomerProduct.CreateTime], T1.[T_QCRM_CustomerProduct.CreateUser], T1.[T_QCRM_CustomerProduct.UpdateTime], T1.[T_QCRM_CustomerProduct.UpdateUser], T1.[T_QCRM_CustomerProduct.BeginTime], T1.[T_QCRM_CustomerProduct.EndTime])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_CustomerProduct.Id], 
            T.CustomerCode AS [T_QCRM_CustomerProduct.CustomerCode], 
            T.ProductCode AS [T_QCRM_CustomerProduct.ProductCode], 
            T.ProductItemId AS [T_QCRM_CustomerProduct.ProductItemId], 
            T.Remarks AS [T_QCRM_CustomerProduct.Remarks], 
            T.CreateTime AS [T_QCRM_CustomerProduct.CreateTime], 
            T.CreateUser AS [T_QCRM_CustomerProduct.CreateUser], 
            T.UpdateTime AS [T_QCRM_CustomerProduct.UpdateTime], 
            T.UpdateUser AS [T_QCRM_CustomerProduct.UpdateUser], 
            T.BeginTime AS [T_QCRM_CustomerProduct.BeginTime], 
            T.EndTime AS [T_QCRM_CustomerProduct.EndTime], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QCRM_CustomerProduct AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QCRM_ListInForm.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_ListInForm
        [DbCRMkEntity_SQLServer.Store.T_QCRM_ListInForm](T1.[T_QCRM_ListInForm.Id], T1.[T_QCRM_ListInForm.FormCode], T1.[T_QCRM_ListInForm.ListType], T1.[T_QCRM_ListInForm.CreateTime], T1.[T_QCRM_ListInForm.CreateUser], T1.[T_QCRM_ListInForm.SortId])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_ListInForm.Id], 
            T.FormCode AS [T_QCRM_ListInForm.FormCode], 
            T.ListType AS [T_QCRM_ListInForm.ListType], 
            T.CreateTime AS [T_QCRM_ListInForm.CreateTime], 
            T.CreateUser AS [T_QCRM_ListInForm.CreateUser], 
            T.SortId AS [T_QCRM_ListInForm.SortId], 
            True AS _from0
        FROM DbCRMContext.T_QCRM_ListInForm AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QCRM_ListInForm.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_ListInForm
        [DbCRMkEntity_SQLServer.T_QCRM_ListInForm](T1.[T_QCRM_ListInForm.Id], T1.[T_QCRM_ListInForm.FormCode], T1.[T_QCRM_ListInForm.ListType], T1.[T_QCRM_ListInForm.CreateTime], T1.[T_QCRM_ListInForm.CreateUser], T1.[T_QCRM_ListInForm.SortId])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_ListInForm.Id], 
            T.FormCode AS [T_QCRM_ListInForm.FormCode], 
            T.ListType AS [T_QCRM_ListInForm.ListType], 
            T.CreateTime AS [T_QCRM_ListInForm.CreateTime], 
            T.CreateUser AS [T_QCRM_ListInForm.CreateUser], 
            T.SortId AS [T_QCRM_ListInForm.SortId], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QCRM_ListInForm AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QCRM_Product.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_Product
        [DbCRMkEntity_SQLServer.Store.T_QCRM_Product](T1.[T_QCRM_Product.Id], T1.[T_QCRM_Product.Code], T1.[T_QCRM_Product.Name], T1.[T_QCRM_Product.ServerType], T1.[T_QCRM_Product.CreateTime], T1.[T_QCRM_Product.UpdateTime], T1.[T_QCRM_Product.CreateUser], T1.[T_QCRM_Product.UpdateUser], T1.[T_QCRM_Product.IsHide], T1.[T_QCRM_Product.SortId], T1.[T_QCRM_Product.ItemTitle])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_Product.Id], 
            T.Code AS [T_QCRM_Product.Code], 
            T.Name AS [T_QCRM_Product.Name], 
            T.ServerType AS [T_QCRM_Product.ServerType], 
            T.CreateTime AS [T_QCRM_Product.CreateTime], 
            T.UpdateTime AS [T_QCRM_Product.UpdateTime], 
            T.CreateUser AS [T_QCRM_Product.CreateUser], 
            T.UpdateUser AS [T_QCRM_Product.UpdateUser], 
            T.IsHide AS [T_QCRM_Product.IsHide], 
            T.SortId AS [T_QCRM_Product.SortId], 
            T.ItemTitle AS [T_QCRM_Product.ItemTitle], 
            True AS _from0
        FROM DbCRMContext.T_QCRM_Product AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QCRM_Product.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_Product
        [DbCRMkEntity_SQLServer.T_QCRM_Product](T1.[T_QCRM_Product.Id], T1.[T_QCRM_Product.Code], T1.[T_QCRM_Product.Name], T1.[T_QCRM_Product.ServerType], T1.[T_QCRM_Product.CreateTime], T1.[T_QCRM_Product.UpdateTime], T1.[T_QCRM_Product.CreateUser], T1.[T_QCRM_Product.UpdateUser], T1.[T_QCRM_Product.IsHide], T1.[T_QCRM_Product.SortId], T1.[T_QCRM_Product.ItemTitle])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_Product.Id], 
            T.Code AS [T_QCRM_Product.Code], 
            T.Name AS [T_QCRM_Product.Name], 
            T.ServerType AS [T_QCRM_Product.ServerType], 
            T.CreateTime AS [T_QCRM_Product.CreateTime], 
            T.UpdateTime AS [T_QCRM_Product.UpdateTime], 
            T.CreateUser AS [T_QCRM_Product.CreateUser], 
            T.UpdateUser AS [T_QCRM_Product.UpdateUser], 
            T.IsHide AS [T_QCRM_Product.IsHide], 
            T.SortId AS [T_QCRM_Product.SortId], 
            T.ItemTitle AS [T_QCRM_Product.ItemTitle], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QCRM_Product AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QCRM_ProductItem.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_ProductItem
        [DbCRMkEntity_SQLServer.Store.T_QCRM_ProductItem](T1.[T_QCRM_ProductItem.Id], T1.[T_QCRM_ProductItem.ProduceCode], T1.[T_QCRM_ProductItem.ItemName], T1.[T_QCRM_ProductItem.IsHide], T1.[T_QCRM_ProductItem.CreateTime], T1.[T_QCRM_ProductItem.UpdateTime], T1.[T_QCRM_ProductItem.CreateUser], T1.[T_QCRM_ProductItem.UpdateUser], T1.[T_QCRM_ProductItem.SortId])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_ProductItem.Id], 
            T.ProduceCode AS [T_QCRM_ProductItem.ProduceCode], 
            T.ItemName AS [T_QCRM_ProductItem.ItemName], 
            T.IsHide AS [T_QCRM_ProductItem.IsHide], 
            T.CreateTime AS [T_QCRM_ProductItem.CreateTime], 
            T.UpdateTime AS [T_QCRM_ProductItem.UpdateTime], 
            T.CreateUser AS [T_QCRM_ProductItem.CreateUser], 
            T.UpdateUser AS [T_QCRM_ProductItem.UpdateUser], 
            T.SortId AS [T_QCRM_ProductItem.SortId], 
            True AS _from0
        FROM DbCRMContext.T_QCRM_ProductItem AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QCRM_ProductItem.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_ProductItem
        [DbCRMkEntity_SQLServer.T_QCRM_ProductItem](T1.[T_QCRM_ProductItem.Id], T1.[T_QCRM_ProductItem.ProduceCode], T1.[T_QCRM_ProductItem.ItemName], T1.[T_QCRM_ProductItem.IsHide], T1.[T_QCRM_ProductItem.CreateTime], T1.[T_QCRM_ProductItem.UpdateTime], T1.[T_QCRM_ProductItem.CreateUser], T1.[T_QCRM_ProductItem.UpdateUser], T1.[T_QCRM_ProductItem.SortId])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_ProductItem.Id], 
            T.ProduceCode AS [T_QCRM_ProductItem.ProduceCode], 
            T.ItemName AS [T_QCRM_ProductItem.ItemName], 
            T.IsHide AS [T_QCRM_ProductItem.IsHide], 
            T.CreateTime AS [T_QCRM_ProductItem.CreateTime], 
            T.UpdateTime AS [T_QCRM_ProductItem.UpdateTime], 
            T.CreateUser AS [T_QCRM_ProductItem.CreateUser], 
            T.UpdateUser AS [T_QCRM_ProductItem.UpdateUser], 
            T.SortId AS [T_QCRM_ProductItem.SortId], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QCRM_ProductItem AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QCRM_QuickSreach.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_QuickSreach
        [DbCRMkEntity_SQLServer.Store.T_QCRM_QuickSreach](T1.[T_QCRM_QuickSreach.Id], T1.[T_QCRM_QuickSreach.QueryFieldId], T1.[T_QCRM_QuickSreach.DictionaryId], T1.[T_QCRM_QuickSreach.SreachTitle], T1.[T_QCRM_QuickSreach.SreachType], T1.[T_QCRM_QuickSreach.UpdateTime], T1.[T_QCRM_QuickSreach.CreateUser], T1.[T_QCRM_QuickSreach.CreateTime], T1.[T_QCRM_QuickSreach.UpdateUser])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_QuickSreach.Id], 
            T.QueryFieldId AS [T_QCRM_QuickSreach.QueryFieldId], 
            T.DictionaryId AS [T_QCRM_QuickSreach.DictionaryId], 
            T.SreachTitle AS [T_QCRM_QuickSreach.SreachTitle], 
            T.SreachType AS [T_QCRM_QuickSreach.SreachType], 
            T.UpdateTime AS [T_QCRM_QuickSreach.UpdateTime], 
            T.CreateUser AS [T_QCRM_QuickSreach.CreateUser], 
            T.CreateTime AS [T_QCRM_QuickSreach.CreateTime], 
            T.UpdateUser AS [T_QCRM_QuickSreach.UpdateUser], 
            True AS _from0
        FROM DbCRMContext.T_QCRM_QuickSreach AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QCRM_QuickSreach.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_QuickSreach
        [DbCRMkEntity_SQLServer.T_QCRM_QuickSreach](T1.[T_QCRM_QuickSreach.Id], T1.[T_QCRM_QuickSreach.QueryFieldId], T1.[T_QCRM_QuickSreach.DictionaryId], T1.[T_QCRM_QuickSreach.SreachTitle], T1.[T_QCRM_QuickSreach.SreachType], T1.[T_QCRM_QuickSreach.UpdateTime], T1.[T_QCRM_QuickSreach.CreateUser], T1.[T_QCRM_QuickSreach.CreateTime], T1.[T_QCRM_QuickSreach.UpdateUser])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_QuickSreach.Id], 
            T.QueryFieldId AS [T_QCRM_QuickSreach.QueryFieldId], 
            T.DictionaryId AS [T_QCRM_QuickSreach.DictionaryId], 
            T.SreachTitle AS [T_QCRM_QuickSreach.SreachTitle], 
            T.SreachType AS [T_QCRM_QuickSreach.SreachType], 
            T.UpdateTime AS [T_QCRM_QuickSreach.UpdateTime], 
            T.CreateUser AS [T_QCRM_QuickSreach.CreateUser], 
            T.CreateTime AS [T_QCRM_QuickSreach.CreateTime], 
            T.UpdateUser AS [T_QCRM_QuickSreach.UpdateUser], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QCRM_QuickSreach AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QCRM_QuickSreachUser.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_QuickSreachUser
        [DbCRMkEntity_SQLServer.Store.T_QCRM_QuickSreachUser](T1.[T_QCRM_QuickSreachUser.Id], T1.[T_QCRM_QuickSreachUser.SreachId], T1.[T_QCRM_QuickSreachUser.UserCode], T1.[T_QCRM_QuickSreachUser.CreateTime])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_QuickSreachUser.Id], 
            T.SreachId AS [T_QCRM_QuickSreachUser.SreachId], 
            T.UserCode AS [T_QCRM_QuickSreachUser.UserCode], 
            T.CreateTime AS [T_QCRM_QuickSreachUser.CreateTime], 
            True AS _from0
        FROM DbCRMContext.T_QCRM_QuickSreachUser AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QCRM_QuickSreachUser.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_QuickSreachUser
        [DbCRMkEntity_SQLServer.T_QCRM_QuickSreachUser](T1.[T_QCRM_QuickSreachUser.Id], T1.[T_QCRM_QuickSreachUser.SreachId], T1.[T_QCRM_QuickSreachUser.UserCode], T1.[T_QCRM_QuickSreachUser.CreateTime])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_QuickSreachUser.Id], 
            T.SreachId AS [T_QCRM_QuickSreachUser.SreachId], 
            T.UserCode AS [T_QCRM_QuickSreachUser.UserCode], 
            T.CreateTime AS [T_QCRM_QuickSreachUser.CreateTime], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QCRM_QuickSreachUser AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QCRM_Tabs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_Tabs
        [DbCRMkEntity_SQLServer.Store.T_QCRM_Tabs](T1.[T_QCRM_Tabs.Id], T1.[T_QCRM_Tabs.TabCode], T1.[T_QCRM_Tabs.TableCode], T1.[T_QCRM_Tabs.FieldCode], T1.[T_QCRM_Tabs.SortId])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_Tabs.Id], 
            T.TabCode AS [T_QCRM_Tabs.TabCode], 
            T.TableCode AS [T_QCRM_Tabs.TableCode], 
            T.FieldCode AS [T_QCRM_Tabs.FieldCode], 
            T.SortId AS [T_QCRM_Tabs.SortId], 
            True AS _from0
        FROM DbCRMContext.T_QCRM_Tabs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QCRM_Tabs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_Tabs
        [DbCRMkEntity_SQLServer.T_QCRM_Tabs](T1.[T_QCRM_Tabs.Id], T1.[T_QCRM_Tabs.TabCode], T1.[T_QCRM_Tabs.TableCode], T1.[T_QCRM_Tabs.FieldCode], T1.[T_QCRM_Tabs.SortId])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_Tabs.Id], 
            T.TabCode AS [T_QCRM_Tabs.TabCode], 
            T.TableCode AS [T_QCRM_Tabs.TableCode], 
            T.FieldCode AS [T_QCRM_Tabs.FieldCode], 
            T.SortId AS [T_QCRM_Tabs.SortId], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QCRM_Tabs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QCRM_UserInForm.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_UserInForm
        [DbCRMkEntity_SQLServer.Store.T_QCRM_UserInForm](T1.[T_QCRM_UserInForm.Id], T1.[T_QCRM_UserInForm.UserType], T1.[T_QCRM_UserInForm.TypeCode], T1.[T_QCRM_UserInForm.FormCode], T1.[T_QCRM_UserInForm.CreateTime], T1.[T_QCRM_UserInForm.CreateUser])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_UserInForm.Id], 
            T.UserType AS [T_QCRM_UserInForm.UserType], 
            T.TypeCode AS [T_QCRM_UserInForm.TypeCode], 
            T.FormCode AS [T_QCRM_UserInForm.FormCode], 
            T.CreateTime AS [T_QCRM_UserInForm.CreateTime], 
            T.CreateUser AS [T_QCRM_UserInForm.CreateUser], 
            True AS _from0
        FROM DbCRMContext.T_QCRM_UserInForm AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QCRM_UserInForm.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_UserInForm
        [DbCRMkEntity_SQLServer.T_QCRM_UserInForm](T1.[T_QCRM_UserInForm.Id], T1.[T_QCRM_UserInForm.UserType], T1.[T_QCRM_UserInForm.TypeCode], T1.[T_QCRM_UserInForm.FormCode], T1.[T_QCRM_UserInForm.CreateTime], T1.[T_QCRM_UserInForm.CreateUser])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_UserInForm.Id], 
            T.UserType AS [T_QCRM_UserInForm.UserType], 
            T.TypeCode AS [T_QCRM_UserInForm.TypeCode], 
            T.FormCode AS [T_QCRM_UserInForm.FormCode], 
            T.CreateTime AS [T_QCRM_UserInForm.CreateTime], 
            T.CreateUser AS [T_QCRM_UserInForm.CreateUser], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QCRM_UserInForm AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QCRM_UserQueryListSetting.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_UserQueryListSetting
        [DbCRMkEntity_SQLServer.Store.T_QCRM_UserQueryListSetting](T1.[T_QCRM_UserQueryListSetting.Id], T1.[T_QCRM_UserQueryListSetting.QueryListId], T1.[T_QCRM_UserQueryListSetting.SortId], T1.[T_QCRM_UserQueryListSetting.StyleWidth], T1.[T_QCRM_UserQueryListSetting.UserCode], T1.[T_QCRM_UserQueryListSetting.IsHide], T1.[T_QCRM_UserQueryListSetting.CreateUser], T1.[T_QCRM_UserQueryListSetting.CreateTime], T1.[T_QCRM_UserQueryListSetting.UpdateUser], T1.[T_QCRM_UserQueryListSetting.UpdateTime])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_UserQueryListSetting.Id], 
            T.QueryListId AS [T_QCRM_UserQueryListSetting.QueryListId], 
            T.SortId AS [T_QCRM_UserQueryListSetting.SortId], 
            T.StyleWidth AS [T_QCRM_UserQueryListSetting.StyleWidth], 
            T.UserCode AS [T_QCRM_UserQueryListSetting.UserCode], 
            T.IsHide AS [T_QCRM_UserQueryListSetting.IsHide], 
            T.CreateUser AS [T_QCRM_UserQueryListSetting.CreateUser], 
            T.CreateTime AS [T_QCRM_UserQueryListSetting.CreateTime], 
            T.UpdateUser AS [T_QCRM_UserQueryListSetting.UpdateUser], 
            T.UpdateTime AS [T_QCRM_UserQueryListSetting.UpdateTime], 
            True AS _from0
        FROM DbCRMContext.T_QCRM_UserQueryListSetting AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QCRM_UserQueryListSetting.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_UserQueryListSetting
        [DbCRMkEntity_SQLServer.T_QCRM_UserQueryListSetting](T1.[T_QCRM_UserQueryListSetting.Id], T1.[T_QCRM_UserQueryListSetting.QueryListId], T1.[T_QCRM_UserQueryListSetting.SortId], T1.[T_QCRM_UserQueryListSetting.StyleWidth], T1.[T_QCRM_UserQueryListSetting.UserCode], T1.[T_QCRM_UserQueryListSetting.IsHide], T1.[T_QCRM_UserQueryListSetting.CreateUser], T1.[T_QCRM_UserQueryListSetting.CreateTime], T1.[T_QCRM_UserQueryListSetting.UpdateUser], T1.[T_QCRM_UserQueryListSetting.UpdateTime])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_UserQueryListSetting.Id], 
            T.QueryListId AS [T_QCRM_UserQueryListSetting.QueryListId], 
            T.SortId AS [T_QCRM_UserQueryListSetting.SortId], 
            T.StyleWidth AS [T_QCRM_UserQueryListSetting.StyleWidth], 
            T.UserCode AS [T_QCRM_UserQueryListSetting.UserCode], 
            T.IsHide AS [T_QCRM_UserQueryListSetting.IsHide], 
            T.CreateUser AS [T_QCRM_UserQueryListSetting.CreateUser], 
            T.CreateTime AS [T_QCRM_UserQueryListSetting.CreateTime], 
            T.UpdateUser AS [T_QCRM_UserQueryListSetting.UpdateUser], 
            T.UpdateTime AS [T_QCRM_UserQueryListSetting.UpdateTime], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QCRM_UserQueryListSetting AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QCRM_UserQuerySetting.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_UserQuerySetting
        [DbCRMkEntity_SQLServer.Store.T_QCRM_UserQuerySetting](T1.[T_QCRM_UserQuerySetting.Id], T1.[T_QCRM_UserQuerySetting.QueryCategoryId], T1.[T_QCRM_UserQuerySetting.UserCode], T1.[T_QCRM_UserQuerySetting.IsHide], T1.[T_QCRM_UserQuerySetting.CreateTime], T1.[T_QCRM_UserQuerySetting.CreateUser], T1.[T_QCRM_UserQuerySetting.UpdateTIme], T1.[T_QCRM_UserQuerySetting.UpdateUser])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_UserQuerySetting.Id], 
            T.QueryCategoryId AS [T_QCRM_UserQuerySetting.QueryCategoryId], 
            T.UserCode AS [T_QCRM_UserQuerySetting.UserCode], 
            T.IsHide AS [T_QCRM_UserQuerySetting.IsHide], 
            T.CreateTime AS [T_QCRM_UserQuerySetting.CreateTime], 
            T.CreateUser AS [T_QCRM_UserQuerySetting.CreateUser], 
            T.UpdateTIme AS [T_QCRM_UserQuerySetting.UpdateTIme], 
            T.UpdateUser AS [T_QCRM_UserQuerySetting.UpdateUser], 
            True AS _from0
        FROM DbCRMContext.T_QCRM_UserQuerySetting AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QCRM_UserQuerySetting.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_UserQuerySetting
        [DbCRMkEntity_SQLServer.T_QCRM_UserQuerySetting](T1.[T_QCRM_UserQuerySetting.Id], T1.[T_QCRM_UserQuerySetting.QueryCategoryId], T1.[T_QCRM_UserQuerySetting.UserCode], T1.[T_QCRM_UserQuerySetting.IsHide], T1.[T_QCRM_UserQuerySetting.CreateTime], T1.[T_QCRM_UserQuerySetting.CreateUser], T1.[T_QCRM_UserQuerySetting.UpdateTIme], T1.[T_QCRM_UserQuerySetting.UpdateUser])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_UserQuerySetting.Id], 
            T.QueryCategoryId AS [T_QCRM_UserQuerySetting.QueryCategoryId], 
            T.UserCode AS [T_QCRM_UserQuerySetting.UserCode], 
            T.IsHide AS [T_QCRM_UserQuerySetting.IsHide], 
            T.CreateTime AS [T_QCRM_UserQuerySetting.CreateTime], 
            T.CreateUser AS [T_QCRM_UserQuerySetting.CreateUser], 
            T.UpdateTIme AS [T_QCRM_UserQuerySetting.UpdateTIme], 
            T.UpdateUser AS [T_QCRM_UserQuerySetting.UpdateUser], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QCRM_UserQuerySetting AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QWF_Config.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_Config
        [DbCRMkEntity_SQLServer.Store.T_QWF_Config](T1.[T_QWF_Config.ConfigId], T1.[T_QWF_Config.ConfigResourceCode], T1.[T_QWF_Config.ConfigName], T1.[T_QWF_Config.ConfigValueType], T1.[T_QWF_Config.ConfigValue], T1.[T_QWF_Config.ParentId], T1.[T_QWF_Config.LayerId], T1.[T_QWF_Config.ConfigIdList], T1.[T_QWF_Config.SortId], T1.[T_QWF_Config.IsDelete], T1.[T_QWF_Config.IsHidden], T1.[T_QWF_Config.CreateTime], T1.[T_QWF_Config.UpdateTime], T1.[T_QWF_Config.IsSubNode], T1.[T_QWF_Config.ConfigRemarks], T1.[T_QWF_Config.CreateUserId], T1.[T_QWF_Config.UpdateUserId])
    FROM (
        SELECT 
            T.ConfigId AS [T_QWF_Config.ConfigId], 
            T.ConfigResourceCode AS [T_QWF_Config.ConfigResourceCode], 
            T.ConfigName AS [T_QWF_Config.ConfigName], 
            T.ConfigValueType AS [T_QWF_Config.ConfigValueType], 
            T.ConfigValue AS [T_QWF_Config.ConfigValue], 
            T.ParentId AS [T_QWF_Config.ParentId], 
            T.LayerId AS [T_QWF_Config.LayerId], 
            T.ConfigIdList AS [T_QWF_Config.ConfigIdList], 
            T.SortId AS [T_QWF_Config.SortId], 
            T.IsDelete AS [T_QWF_Config.IsDelete], 
            T.IsHidden AS [T_QWF_Config.IsHidden], 
            T.CreateTime AS [T_QWF_Config.CreateTime], 
            T.UpdateTime AS [T_QWF_Config.UpdateTime], 
            T.IsSubNode AS [T_QWF_Config.IsSubNode], 
            T.ConfigRemarks AS [T_QWF_Config.ConfigRemarks], 
            T.CreateUserId AS [T_QWF_Config.CreateUserId], 
            T.UpdateUserId AS [T_QWF_Config.UpdateUserId], 
            True AS _from0
        FROM DbCRMContext.T_QWF_Config AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QWF_Config.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_Config
        [DbCRMkEntity_SQLServer.T_QWF_Config](T1.[T_QWF_Config.ConfigId], T1.[T_QWF_Config.ConfigResourceCode], T1.[T_QWF_Config.ConfigName], T1.[T_QWF_Config.ConfigValueType], T1.[T_QWF_Config.ConfigValue], T1.[T_QWF_Config.ParentId], T1.[T_QWF_Config.LayerId], T1.[T_QWF_Config.ConfigIdList], T1.[T_QWF_Config.SortId], T1.[T_QWF_Config.IsDelete], T1.[T_QWF_Config.IsHidden], T1.[T_QWF_Config.CreateTime], T1.[T_QWF_Config.UpdateTime], T1.[T_QWF_Config.IsSubNode], T1.[T_QWF_Config.ConfigRemarks], T1.[T_QWF_Config.CreateUserId], T1.[T_QWF_Config.UpdateUserId])
    FROM (
        SELECT 
            T.ConfigId AS [T_QWF_Config.ConfigId], 
            T.ConfigResourceCode AS [T_QWF_Config.ConfigResourceCode], 
            T.ConfigName AS [T_QWF_Config.ConfigName], 
            T.ConfigValueType AS [T_QWF_Config.ConfigValueType], 
            T.ConfigValue AS [T_QWF_Config.ConfigValue], 
            T.ParentId AS [T_QWF_Config.ParentId], 
            T.LayerId AS [T_QWF_Config.LayerId], 
            T.ConfigIdList AS [T_QWF_Config.ConfigIdList], 
            T.SortId AS [T_QWF_Config.SortId], 
            T.IsDelete AS [T_QWF_Config.IsDelete], 
            T.IsHidden AS [T_QWF_Config.IsHidden], 
            T.CreateTime AS [T_QWF_Config.CreateTime], 
            T.UpdateTime AS [T_QWF_Config.UpdateTime], 
            T.IsSubNode AS [T_QWF_Config.IsSubNode], 
            T.ConfigRemarks AS [T_QWF_Config.ConfigRemarks], 
            T.CreateUserId AS [T_QWF_Config.CreateUserId], 
            T.UpdateUserId AS [T_QWF_Config.UpdateUserId], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QWF_Config AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QWF_LoginLog.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView22()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_LoginLog
        [DbCRMkEntity_SQLServer.Store.T_QWF_LoginLog](T1.[T_QWF_LoginLog.Id], T1.[T_QWF_LoginLog.AppId], T1.[T_QWF_LoginLog.UserName], T1.[T_QWF_LoginLog.Ip], T1.[T_QWF_LoginLog.LoginTime], T1.[T_QWF_LoginLog.LoginStatus], T1.[T_QWF_LoginLog.Remarks])
    FROM (
        SELECT 
            T.Id AS [T_QWF_LoginLog.Id], 
            T.AppId AS [T_QWF_LoginLog.AppId], 
            T.UserName AS [T_QWF_LoginLog.UserName], 
            T.Ip AS [T_QWF_LoginLog.Ip], 
            T.LoginTime AS [T_QWF_LoginLog.LoginTime], 
            T.LoginStatus AS [T_QWF_LoginLog.LoginStatus], 
            T.Remarks AS [T_QWF_LoginLog.Remarks], 
            True AS _from0
        FROM DbCRMContext.T_QWF_LoginLog AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QWF_LoginLog.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView23()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_LoginLog
        [DbCRMkEntity_SQLServer.T_QWF_LoginLog](T1.[T_QWF_LoginLog.Id], T1.[T_QWF_LoginLog.AppId], T1.[T_QWF_LoginLog.UserName], T1.[T_QWF_LoginLog.Ip], T1.[T_QWF_LoginLog.LoginTime], T1.[T_QWF_LoginLog.LoginStatus], T1.[T_QWF_LoginLog.Remarks])
    FROM (
        SELECT 
            T.Id AS [T_QWF_LoginLog.Id], 
            T.AppId AS [T_QWF_LoginLog.AppId], 
            T.UserName AS [T_QWF_LoginLog.UserName], 
            T.Ip AS [T_QWF_LoginLog.Ip], 
            T.LoginTime AS [T_QWF_LoginLog.LoginTime], 
            T.LoginStatus AS [T_QWF_LoginLog.LoginStatus], 
            T.Remarks AS [T_QWF_LoginLog.Remarks], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QWF_LoginLog AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QWF_Menu.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView24()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_Menu
        [DbCRMkEntity_SQLServer.Store.T_QWF_Menu](T1.[T_QWF_Menu.MenuId], T1.[T_QWF_Menu.ParentId], T1.[T_QWF_Menu.LayerId], T1.[T_QWF_Menu.MenuIdList], T1.[T_QWF_Menu.SortId], T1.[T_QWF_Menu.MenuName], T1.[T_QWF_Menu.CreateTime], T1.[T_QWF_Menu.UpdateTime], T1.[T_QWF_Menu.IsShow], T1.[T_QWF_Menu.DefaultUrl], T1.[T_QWF_Menu.CreateUserId], T1.[T_QWF_Menu.UpdateUserId], T1.[T_QWF_Menu.IconCls], T1.[T_QWF_Menu.IsSubNode], T1.[T_QWF_Menu.Target])
    FROM (
        SELECT 
            T.MenuId AS [T_QWF_Menu.MenuId], 
            T.ParentId AS [T_QWF_Menu.ParentId], 
            T.LayerId AS [T_QWF_Menu.LayerId], 
            T.MenuIdList AS [T_QWF_Menu.MenuIdList], 
            T.SortId AS [T_QWF_Menu.SortId], 
            T.MenuName AS [T_QWF_Menu.MenuName], 
            T.CreateTime AS [T_QWF_Menu.CreateTime], 
            T.UpdateTime AS [T_QWF_Menu.UpdateTime], 
            T.IsShow AS [T_QWF_Menu.IsShow], 
            T.DefaultUrl AS [T_QWF_Menu.DefaultUrl], 
            T.CreateUserId AS [T_QWF_Menu.CreateUserId], 
            T.UpdateUserId AS [T_QWF_Menu.UpdateUserId], 
            T.IconCls AS [T_QWF_Menu.IconCls], 
            T.IsSubNode AS [T_QWF_Menu.IsSubNode], 
            T.Target AS [T_QWF_Menu.Target], 
            True AS _from0
        FROM DbCRMContext.T_QWF_Menu AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QWF_Menu.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView25()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_Menu
        [DbCRMkEntity_SQLServer.T_QWF_Menu](T1.[T_QWF_Menu.MenuId], T1.[T_QWF_Menu.ParentId], T1.[T_QWF_Menu.LayerId], T1.[T_QWF_Menu.MenuIdList], T1.[T_QWF_Menu.SortId], T1.[T_QWF_Menu.MenuName], T1.[T_QWF_Menu.CreateTime], T1.[T_QWF_Menu.UpdateTime], T1.[T_QWF_Menu.IsShow], T1.[T_QWF_Menu.DefaultUrl], T1.[T_QWF_Menu.CreateUserId], T1.[T_QWF_Menu.UpdateUserId], T1.[T_QWF_Menu.IconCls], T1.[T_QWF_Menu.IsSubNode], T1.[T_QWF_Menu.Target])
    FROM (
        SELECT 
            T.MenuId AS [T_QWF_Menu.MenuId], 
            T.ParentId AS [T_QWF_Menu.ParentId], 
            T.LayerId AS [T_QWF_Menu.LayerId], 
            T.MenuIdList AS [T_QWF_Menu.MenuIdList], 
            T.SortId AS [T_QWF_Menu.SortId], 
            T.MenuName AS [T_QWF_Menu.MenuName], 
            T.CreateTime AS [T_QWF_Menu.CreateTime], 
            T.UpdateTime AS [T_QWF_Menu.UpdateTime], 
            T.IsShow AS [T_QWF_Menu.IsShow], 
            T.DefaultUrl AS [T_QWF_Menu.DefaultUrl], 
            T.CreateUserId AS [T_QWF_Menu.CreateUserId], 
            T.UpdateUserId AS [T_QWF_Menu.UpdateUserId], 
            T.IconCls AS [T_QWF_Menu.IconCls], 
            T.IsSubNode AS [T_QWF_Menu.IsSubNode], 
            T.Target AS [T_QWF_Menu.Target], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QWF_Menu AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QWF_MenuInUrl.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView26()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_MenuInUrl
        [DbCRMkEntity_SQLServer.Store.T_QWF_MenuInUrl](T1.[T_QWF_MenuInUrl.Id], T1.[T_QWF_MenuInUrl.MenuId], T1.[T_QWF_MenuInUrl.Url], T1.[T_QWF_MenuInUrl.CreateTime], T1.[T_QWF_MenuInUrl.CreateUserId])
    FROM (
        SELECT 
            T.Id AS [T_QWF_MenuInUrl.Id], 
            T.MenuId AS [T_QWF_MenuInUrl.MenuId], 
            T.Url AS [T_QWF_MenuInUrl.Url], 
            T.CreateTime AS [T_QWF_MenuInUrl.CreateTime], 
            T.CreateUserId AS [T_QWF_MenuInUrl.CreateUserId], 
            True AS _from0
        FROM DbCRMContext.T_QWF_MenuInUrl AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QWF_MenuInUrl.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView27()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_MenuInUrl
        [DbCRMkEntity_SQLServer.T_QWF_MenuInUrl](T1.[T_QWF_MenuInUrl.Id], T1.[T_QWF_MenuInUrl.MenuId], T1.[T_QWF_MenuInUrl.Url], T1.[T_QWF_MenuInUrl.CreateTime], T1.[T_QWF_MenuInUrl.CreateUserId])
    FROM (
        SELECT 
            T.Id AS [T_QWF_MenuInUrl.Id], 
            T.MenuId AS [T_QWF_MenuInUrl.MenuId], 
            T.Url AS [T_QWF_MenuInUrl.Url], 
            T.CreateTime AS [T_QWF_MenuInUrl.CreateTime], 
            T.CreateUserId AS [T_QWF_MenuInUrl.CreateUserId], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QWF_MenuInUrl AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QWF_Org.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView28()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_Org
        [DbCRMkEntity_SQLServer.Store.T_QWF_Org](T1.[T_QWF_Org.OrgId], T1.[T_QWF_Org.OrgCode], T1.[T_QWF_Org.OrgName], T1.[T_QWF_Org.OrgNamePath], T1.[T_QWF_Org.OrgAttribute], T1.[T_QWF_Org.IsOut], T1.[T_QWF_Org.ParentId], T1.[T_QWF_Org.LayerId], T1.[T_QWF_Org.OrgIdList], T1.[T_QWF_Org.OrgCodeList], T1.[T_QWF_Org.SortId], T1.[T_QWF_Org.IsDelete], T1.[T_QWF_Org.CreateTime], T1.[T_QWF_Org.UpdateTime], T1.[T_QWF_Org.IsSubNode], T1.[T_QWF_Org.Remarks], T1.[T_QWF_Org.CreateUserId], T1.[T_QWF_Org.UpdateUserId])
    FROM (
        SELECT 
            T.OrgId AS [T_QWF_Org.OrgId], 
            T.OrgCode AS [T_QWF_Org.OrgCode], 
            T.OrgName AS [T_QWF_Org.OrgName], 
            T.OrgNamePath AS [T_QWF_Org.OrgNamePath], 
            T.OrgAttribute AS [T_QWF_Org.OrgAttribute], 
            T.IsOut AS [T_QWF_Org.IsOut], 
            T.ParentId AS [T_QWF_Org.ParentId], 
            T.LayerId AS [T_QWF_Org.LayerId], 
            T.OrgIdList AS [T_QWF_Org.OrgIdList], 
            T.OrgCodeList AS [T_QWF_Org.OrgCodeList], 
            T.SortId AS [T_QWF_Org.SortId], 
            T.IsDelete AS [T_QWF_Org.IsDelete], 
            T.CreateTime AS [T_QWF_Org.CreateTime], 
            T.UpdateTime AS [T_QWF_Org.UpdateTime], 
            T.IsSubNode AS [T_QWF_Org.IsSubNode], 
            T.Remarks AS [T_QWF_Org.Remarks], 
            T.CreateUserId AS [T_QWF_Org.CreateUserId], 
            T.UpdateUserId AS [T_QWF_Org.UpdateUserId], 
            True AS _from0
        FROM DbCRMContext.T_QWF_Org AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QWF_Org.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView29()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_Org
        [DbCRMkEntity_SQLServer.T_QWF_Org](T1.[T_QWF_Org.OrgId], T1.[T_QWF_Org.OrgCode], T1.[T_QWF_Org.OrgName], T1.[T_QWF_Org.OrgNamePath], T1.[T_QWF_Org.OrgAttribute], T1.[T_QWF_Org.IsOut], T1.[T_QWF_Org.ParentId], T1.[T_QWF_Org.LayerId], T1.[T_QWF_Org.OrgIdList], T1.[T_QWF_Org.OrgCodeList], T1.[T_QWF_Org.SortId], T1.[T_QWF_Org.IsDelete], T1.[T_QWF_Org.CreateTime], T1.[T_QWF_Org.UpdateTime], T1.[T_QWF_Org.IsSubNode], T1.[T_QWF_Org.Remarks], T1.[T_QWF_Org.CreateUserId], T1.[T_QWF_Org.UpdateUserId])
    FROM (
        SELECT 
            T.OrgId AS [T_QWF_Org.OrgId], 
            T.OrgCode AS [T_QWF_Org.OrgCode], 
            T.OrgName AS [T_QWF_Org.OrgName], 
            T.OrgNamePath AS [T_QWF_Org.OrgNamePath], 
            T.OrgAttribute AS [T_QWF_Org.OrgAttribute], 
            T.IsOut AS [T_QWF_Org.IsOut], 
            T.ParentId AS [T_QWF_Org.ParentId], 
            T.LayerId AS [T_QWF_Org.LayerId], 
            T.OrgIdList AS [T_QWF_Org.OrgIdList], 
            T.OrgCodeList AS [T_QWF_Org.OrgCodeList], 
            T.SortId AS [T_QWF_Org.SortId], 
            T.IsDelete AS [T_QWF_Org.IsDelete], 
            T.CreateTime AS [T_QWF_Org.CreateTime], 
            T.UpdateTime AS [T_QWF_Org.UpdateTime], 
            T.IsSubNode AS [T_QWF_Org.IsSubNode], 
            T.Remarks AS [T_QWF_Org.Remarks], 
            T.CreateUserId AS [T_QWF_Org.CreateUserId], 
            T.UpdateUserId AS [T_QWF_Org.UpdateUserId], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QWF_Org AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QWF_Resource.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView30()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_Resource
        [DbCRMkEntity_SQLServer.Store.T_QWF_Resource](T1.[T_QWF_Resource.RuleId], T1.[T_QWF_Resource.ResourceCode], T1.[T_QWF_Resource.ResourceName], T1.[T_QWF_Resource.CreateTime], T1.[T_QWF_Resource.CreateUserId], T1.[T_QWF_Resource.UpdateTime], T1.[T_QWF_Resource.UpdateUserId], T1.[T_QWF_Resource.ResourceType], T1.[T_QWF_Resource.ResourceRemarks])
    FROM (
        SELECT 
            T.RuleId AS [T_QWF_Resource.RuleId], 
            T.ResourceCode AS [T_QWF_Resource.ResourceCode], 
            T.ResourceName AS [T_QWF_Resource.ResourceName], 
            T.CreateTime AS [T_QWF_Resource.CreateTime], 
            T.CreateUserId AS [T_QWF_Resource.CreateUserId], 
            T.UpdateTime AS [T_QWF_Resource.UpdateTime], 
            T.UpdateUserId AS [T_QWF_Resource.UpdateUserId], 
            T.ResourceType AS [T_QWF_Resource.ResourceType], 
            T.ResourceRemarks AS [T_QWF_Resource.ResourceRemarks], 
            True AS _from0
        FROM DbCRMContext.T_QWF_Resource AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QWF_Resource.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView31()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_Resource
        [DbCRMkEntity_SQLServer.T_QWF_Resource](T1.[T_QWF_Resource.RuleId], T1.[T_QWF_Resource.ResourceCode], T1.[T_QWF_Resource.ResourceName], T1.[T_QWF_Resource.CreateTime], T1.[T_QWF_Resource.CreateUserId], T1.[T_QWF_Resource.UpdateTime], T1.[T_QWF_Resource.UpdateUserId], T1.[T_QWF_Resource.ResourceType], T1.[T_QWF_Resource.ResourceRemarks])
    FROM (
        SELECT 
            T.RuleId AS [T_QWF_Resource.RuleId], 
            T.ResourceCode AS [T_QWF_Resource.ResourceCode], 
            T.ResourceName AS [T_QWF_Resource.ResourceName], 
            T.CreateTime AS [T_QWF_Resource.CreateTime], 
            T.CreateUserId AS [T_QWF_Resource.CreateUserId], 
            T.UpdateTime AS [T_QWF_Resource.UpdateTime], 
            T.UpdateUserId AS [T_QWF_Resource.UpdateUserId], 
            T.ResourceType AS [T_QWF_Resource.ResourceType], 
            T.ResourceRemarks AS [T_QWF_Resource.ResourceRemarks], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QWF_Resource AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QWF_Role.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView32()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_Role
        [DbCRMkEntity_SQLServer.Store.T_QWF_Role](T1.[T_QWF_Role.RoleId], T1.[T_QWF_Role.RoleCode], T1.[T_QWF_Role.RoleName], T1.[T_QWF_Role.RoleGroupId], T1.[T_QWF_Role.CreateTime], T1.[T_QWF_Role.UpdateTime], T1.[T_QWF_Role.SortId], T1.[T_QWF_Role.IsDelete], T1.[T_QWF_Role.Remarks], T1.[T_QWF_Role.CreateUserId], T1.[T_QWF_Role.UpdateUserId])
    FROM (
        SELECT 
            T.RoleId AS [T_QWF_Role.RoleId], 
            T.RoleCode AS [T_QWF_Role.RoleCode], 
            T.RoleName AS [T_QWF_Role.RoleName], 
            T.RoleGroupId AS [T_QWF_Role.RoleGroupId], 
            T.CreateTime AS [T_QWF_Role.CreateTime], 
            T.UpdateTime AS [T_QWF_Role.UpdateTime], 
            T.SortId AS [T_QWF_Role.SortId], 
            T.IsDelete AS [T_QWF_Role.IsDelete], 
            T.Remarks AS [T_QWF_Role.Remarks], 
            T.CreateUserId AS [T_QWF_Role.CreateUserId], 
            T.UpdateUserId AS [T_QWF_Role.UpdateUserId], 
            True AS _from0
        FROM DbCRMContext.T_QWF_Role AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QWF_Role.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView33()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_Role
        [DbCRMkEntity_SQLServer.T_QWF_Role](T1.[T_QWF_Role.RoleId], T1.[T_QWF_Role.RoleCode], T1.[T_QWF_Role.RoleName], T1.[T_QWF_Role.RoleGroupId], T1.[T_QWF_Role.CreateTime], T1.[T_QWF_Role.UpdateTime], T1.[T_QWF_Role.SortId], T1.[T_QWF_Role.IsDelete], T1.[T_QWF_Role.Remarks], T1.[T_QWF_Role.CreateUserId], T1.[T_QWF_Role.UpdateUserId])
    FROM (
        SELECT 
            T.RoleId AS [T_QWF_Role.RoleId], 
            T.RoleCode AS [T_QWF_Role.RoleCode], 
            T.RoleName AS [T_QWF_Role.RoleName], 
            T.RoleGroupId AS [T_QWF_Role.RoleGroupId], 
            T.CreateTime AS [T_QWF_Role.CreateTime], 
            T.UpdateTime AS [T_QWF_Role.UpdateTime], 
            T.SortId AS [T_QWF_Role.SortId], 
            T.IsDelete AS [T_QWF_Role.IsDelete], 
            T.Remarks AS [T_QWF_Role.Remarks], 
            T.CreateUserId AS [T_QWF_Role.CreateUserId], 
            T.UpdateUserId AS [T_QWF_Role.UpdateUserId], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QWF_Role AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QWF_RoleGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView34()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_RoleGroup
        [DbCRMkEntity_SQLServer.Store.T_QWF_RoleGroup](T1.[T_QWF_RoleGroup.GroupId], T1.[T_QWF_RoleGroup.GroupName], T1.[T_QWF_RoleGroup.CreateTime], T1.[T_QWF_RoleGroup.UpdateTime], T1.[T_QWF_RoleGroup.GroupRemarks], T1.[T_QWF_RoleGroup.SortId], T1.[T_QWF_RoleGroup.IsDelete])
    FROM (
        SELECT 
            T.GroupId AS [T_QWF_RoleGroup.GroupId], 
            T.GroupName AS [T_QWF_RoleGroup.GroupName], 
            T.CreateTime AS [T_QWF_RoleGroup.CreateTime], 
            T.UpdateTime AS [T_QWF_RoleGroup.UpdateTime], 
            T.GroupRemarks AS [T_QWF_RoleGroup.GroupRemarks], 
            T.SortId AS [T_QWF_RoleGroup.SortId], 
            T.IsDelete AS [T_QWF_RoleGroup.IsDelete], 
            True AS _from0
        FROM DbCRMContext.T_QWF_RoleGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QWF_RoleGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView35()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_RoleGroup
        [DbCRMkEntity_SQLServer.T_QWF_RoleGroup](T1.[T_QWF_RoleGroup.GroupId], T1.[T_QWF_RoleGroup.GroupName], T1.[T_QWF_RoleGroup.CreateTime], T1.[T_QWF_RoleGroup.UpdateTime], T1.[T_QWF_RoleGroup.GroupRemarks], T1.[T_QWF_RoleGroup.SortId], T1.[T_QWF_RoleGroup.IsDelete])
    FROM (
        SELECT 
            T.GroupId AS [T_QWF_RoleGroup.GroupId], 
            T.GroupName AS [T_QWF_RoleGroup.GroupName], 
            T.CreateTime AS [T_QWF_RoleGroup.CreateTime], 
            T.UpdateTime AS [T_QWF_RoleGroup.UpdateTime], 
            T.GroupRemarks AS [T_QWF_RoleGroup.GroupRemarks], 
            T.SortId AS [T_QWF_RoleGroup.SortId], 
            T.IsDelete AS [T_QWF_RoleGroup.IsDelete], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QWF_RoleGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QWF_RoleInMenu.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView36()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_RoleInMenu
        [DbCRMkEntity_SQLServer.Store.T_QWF_RoleInMenu](T1.[T_QWF_RoleInMenu.RoleId], T1.[T_QWF_RoleInMenu.MenuId], T1.[T_QWF_RoleInMenu.CreateTime], T1.[T_QWF_RoleInMenu.CreateUserId])
    FROM (
        SELECT 
            T.RoleId AS [T_QWF_RoleInMenu.RoleId], 
            T.MenuId AS [T_QWF_RoleInMenu.MenuId], 
            T.CreateTime AS [T_QWF_RoleInMenu.CreateTime], 
            T.CreateUserId AS [T_QWF_RoleInMenu.CreateUserId], 
            True AS _from0
        FROM DbCRMContext.T_QWF_RoleInMenu AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QWF_RoleInMenu.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView37()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_RoleInMenu
        [DbCRMkEntity_SQLServer.T_QWF_RoleInMenu](T1.[T_QWF_RoleInMenu.RoleId], T1.[T_QWF_RoleInMenu.MenuId], T1.[T_QWF_RoleInMenu.CreateTime], T1.[T_QWF_RoleInMenu.CreateUserId])
    FROM (
        SELECT 
            T.RoleId AS [T_QWF_RoleInMenu.RoleId], 
            T.MenuId AS [T_QWF_RoleInMenu.MenuId], 
            T.CreateTime AS [T_QWF_RoleInMenu.CreateTime], 
            T.CreateUserId AS [T_QWF_RoleInMenu.CreateUserId], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QWF_RoleInMenu AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QWF_RoleInResource.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView38()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_RoleInResource
        [DbCRMkEntity_SQLServer.Store.T_QWF_RoleInResource](T1.[T_QWF_RoleInResource.RoleId], T1.[T_QWF_RoleInResource.RuleId], T1.[T_QWF_RoleInResource.CreateTime], T1.[T_QWF_RoleInResource.CreateUserId])
    FROM (
        SELECT 
            T.RoleId AS [T_QWF_RoleInResource.RoleId], 
            T.RuleId AS [T_QWF_RoleInResource.RuleId], 
            T.CreateTime AS [T_QWF_RoleInResource.CreateTime], 
            T.CreateUserId AS [T_QWF_RoleInResource.CreateUserId], 
            True AS _from0
        FROM DbCRMContext.T_QWF_RoleInResource AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QWF_RoleInResource.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView39()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_RoleInResource
        [DbCRMkEntity_SQLServer.T_QWF_RoleInResource](T1.[T_QWF_RoleInResource.RoleId], T1.[T_QWF_RoleInResource.RuleId], T1.[T_QWF_RoleInResource.CreateTime], T1.[T_QWF_RoleInResource.CreateUserId])
    FROM (
        SELECT 
            T.RoleId AS [T_QWF_RoleInResource.RoleId], 
            T.RuleId AS [T_QWF_RoleInResource.RuleId], 
            T.CreateTime AS [T_QWF_RoleInResource.CreateTime], 
            T.CreateUserId AS [T_QWF_RoleInResource.CreateUserId], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QWF_RoleInResource AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QWF_Seq.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView40()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_Seq
        [DbCRMkEntity_SQLServer.Store.T_QWF_Seq](T1.[T_QWF_Seq.Code], T1.[T_QWF_Seq.Name], T1.[T_QWF_Seq.Prefix], T1.[T_QWF_Seq.DateFormart], T1.[T_QWF_Seq.SerialLength], T1.[T_QWF_Seq.CurrentNumber])
    FROM (
        SELECT 
            T.Code AS [T_QWF_Seq.Code], 
            T.Name AS [T_QWF_Seq.Name], 
            T.Prefix AS [T_QWF_Seq.Prefix], 
            T.DateFormart AS [T_QWF_Seq.DateFormart], 
            T.SerialLength AS [T_QWF_Seq.SerialLength], 
            T.CurrentNumber AS [T_QWF_Seq.CurrentNumber], 
            True AS _from0
        FROM DbCRMContext.T_QWF_Seq AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QWF_Seq.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView41()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_Seq
        [DbCRMkEntity_SQLServer.T_QWF_Seq](T1.[T_QWF_Seq.Code], T1.[T_QWF_Seq.Name], T1.[T_QWF_Seq.Prefix], T1.[T_QWF_Seq.DateFormart], T1.[T_QWF_Seq.SerialLength], T1.[T_QWF_Seq.CurrentNumber])
    FROM (
        SELECT 
            T.Code AS [T_QWF_Seq.Code], 
            T.Name AS [T_QWF_Seq.Name], 
            T.Prefix AS [T_QWF_Seq.Prefix], 
            T.DateFormart AS [T_QWF_Seq.DateFormart], 
            T.SerialLength AS [T_QWF_Seq.SerialLength], 
            T.CurrentNumber AS [T_QWF_Seq.CurrentNumber], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QWF_Seq AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QWF_User.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView42()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_User
        [DbCRMkEntity_SQLServer.Store.T_QWF_User](T1.[T_QWF_User.UserId], T1.[T_QWF_User.UserCode], T1.[T_QWF_User.UserName], T1.[T_QWF_User.PassWord], T1.[T_QWF_User.OrgId], T1.[T_QWF_User.Leader], T1.[T_QWF_User.LastLoginIp], T1.[T_QWF_User.LastLoginTime], T1.[T_QWF_User.UserStatus], T1.[T_QWF_User.IsDelete], T1.[T_QWF_User.QQ], T1.[T_QWF_User.Realname], T1.[T_QWF_User.Tel], T1.[T_QWF_User.Phone], T1.[T_QWF_User.Email], T1.[T_QWF_User.Position], T1.[T_QWF_User.UpdateTime], T1.[T_QWF_User.CreateTime], T1.[T_QWF_User.Weixin], T1.[T_QWF_User.Fax], T1.[T_QWF_User.UserRemarks], T1.[T_QWF_User.CreateUserId], T1.[T_QWF_User.UpdateUserId])
    FROM (
        SELECT 
            T.UserId AS [T_QWF_User.UserId], 
            T.UserCode AS [T_QWF_User.UserCode], 
            T.UserName AS [T_QWF_User.UserName], 
            T.PassWord AS [T_QWF_User.PassWord], 
            T.OrgId AS [T_QWF_User.OrgId], 
            T.Leader AS [T_QWF_User.Leader], 
            T.LastLoginIp AS [T_QWF_User.LastLoginIp], 
            T.LastLoginTime AS [T_QWF_User.LastLoginTime], 
            T.UserStatus AS [T_QWF_User.UserStatus], 
            T.IsDelete AS [T_QWF_User.IsDelete], 
            T.QQ AS [T_QWF_User.QQ], 
            T.Realname AS [T_QWF_User.Realname], 
            T.Tel AS [T_QWF_User.Tel], 
            T.Phone AS [T_QWF_User.Phone], 
            T.Email AS [T_QWF_User.Email], 
            T.Position AS [T_QWF_User.Position], 
            T.UpdateTime AS [T_QWF_User.UpdateTime], 
            T.CreateTime AS [T_QWF_User.CreateTime], 
            T.Weixin AS [T_QWF_User.Weixin], 
            T.Fax AS [T_QWF_User.Fax], 
            T.UserRemarks AS [T_QWF_User.UserRemarks], 
            T.CreateUserId AS [T_QWF_User.CreateUserId], 
            T.UpdateUserId AS [T_QWF_User.UpdateUserId], 
            True AS _from0
        FROM DbCRMContext.T_QWF_User AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QWF_User.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView43()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_User
        [DbCRMkEntity_SQLServer.T_QWF_User](T1.[T_QWF_User.UserId], T1.[T_QWF_User.UserCode], T1.[T_QWF_User.UserName], T1.[T_QWF_User.PassWord], T1.[T_QWF_User.OrgId], T1.[T_QWF_User.Leader], T1.[T_QWF_User.LastLoginIp], T1.[T_QWF_User.LastLoginTime], T1.[T_QWF_User.UserStatus], T1.[T_QWF_User.IsDelete], T1.[T_QWF_User.QQ], T1.[T_QWF_User.Realname], T1.[T_QWF_User.Tel], T1.[T_QWF_User.Phone], T1.[T_QWF_User.Email], T1.[T_QWF_User.Position], T1.[T_QWF_User.UpdateTime], T1.[T_QWF_User.CreateTime], T1.[T_QWF_User.Weixin], T1.[T_QWF_User.Fax], T1.[T_QWF_User.UserRemarks], T1.[T_QWF_User.CreateUserId], T1.[T_QWF_User.UpdateUserId])
    FROM (
        SELECT 
            T.UserId AS [T_QWF_User.UserId], 
            T.UserCode AS [T_QWF_User.UserCode], 
            T.UserName AS [T_QWF_User.UserName], 
            T.PassWord AS [T_QWF_User.PassWord], 
            T.OrgId AS [T_QWF_User.OrgId], 
            T.Leader AS [T_QWF_User.Leader], 
            T.LastLoginIp AS [T_QWF_User.LastLoginIp], 
            T.LastLoginTime AS [T_QWF_User.LastLoginTime], 
            T.UserStatus AS [T_QWF_User.UserStatus], 
            T.IsDelete AS [T_QWF_User.IsDelete], 
            T.QQ AS [T_QWF_User.QQ], 
            T.Realname AS [T_QWF_User.Realname], 
            T.Tel AS [T_QWF_User.Tel], 
            T.Phone AS [T_QWF_User.Phone], 
            T.Email AS [T_QWF_User.Email], 
            T.Position AS [T_QWF_User.Position], 
            T.UpdateTime AS [T_QWF_User.UpdateTime], 
            T.CreateTime AS [T_QWF_User.CreateTime], 
            T.Weixin AS [T_QWF_User.Weixin], 
            T.Fax AS [T_QWF_User.Fax], 
            T.UserRemarks AS [T_QWF_User.UserRemarks], 
            T.CreateUserId AS [T_QWF_User.CreateUserId], 
            T.UpdateUserId AS [T_QWF_User.UpdateUserId], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QWF_User AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QWF_UserActionLog.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView44()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_UserActionLog
        [DbCRMkEntity_SQLServer.Store.T_QWF_UserActionLog](T1.[T_QWF_UserActionLog.Id], T1.[T_QWF_UserActionLog.UserId], T1.[T_QWF_UserActionLog.UserCode], T1.[T_QWF_UserActionLog.UserName], T1.[T_QWF_UserActionLog.LogCode], T1.[T_QWF_UserActionLog.LogType], T1.[T_QWF_UserActionLog.UserIp], T1.[T_QWF_UserActionLog.ActionMethod], T1.[T_QWF_UserActionLog.LogDescription], T1.[T_QWF_UserActionLog.LogItems], T1.[T_QWF_UserActionLog.CreateTime])
    FROM (
        SELECT 
            T.Id AS [T_QWF_UserActionLog.Id], 
            T.UserId AS [T_QWF_UserActionLog.UserId], 
            T.UserCode AS [T_QWF_UserActionLog.UserCode], 
            T.UserName AS [T_QWF_UserActionLog.UserName], 
            T.LogCode AS [T_QWF_UserActionLog.LogCode], 
            T.LogType AS [T_QWF_UserActionLog.LogType], 
            T.UserIp AS [T_QWF_UserActionLog.UserIp], 
            T.ActionMethod AS [T_QWF_UserActionLog.ActionMethod], 
            T.LogDescription AS [T_QWF_UserActionLog.LogDescription], 
            T.LogItems AS [T_QWF_UserActionLog.LogItems], 
            T.CreateTime AS [T_QWF_UserActionLog.CreateTime], 
            True AS _from0
        FROM DbCRMContext.T_QWF_UserActionLog AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QWF_UserActionLog.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView45()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_UserActionLog
        [DbCRMkEntity_SQLServer.T_QWF_UserActionLog](T1.[T_QWF_UserActionLog.Id], T1.[T_QWF_UserActionLog.UserId], T1.[T_QWF_UserActionLog.UserCode], T1.[T_QWF_UserActionLog.UserName], T1.[T_QWF_UserActionLog.LogCode], T1.[T_QWF_UserActionLog.LogType], T1.[T_QWF_UserActionLog.UserIp], T1.[T_QWF_UserActionLog.ActionMethod], T1.[T_QWF_UserActionLog.LogDescription], T1.[T_QWF_UserActionLog.LogItems], T1.[T_QWF_UserActionLog.CreateTime])
    FROM (
        SELECT 
            T.Id AS [T_QWF_UserActionLog.Id], 
            T.UserId AS [T_QWF_UserActionLog.UserId], 
            T.UserCode AS [T_QWF_UserActionLog.UserCode], 
            T.UserName AS [T_QWF_UserActionLog.UserName], 
            T.LogCode AS [T_QWF_UserActionLog.LogCode], 
            T.LogType AS [T_QWF_UserActionLog.LogType], 
            T.UserIp AS [T_QWF_UserActionLog.UserIp], 
            T.ActionMethod AS [T_QWF_UserActionLog.ActionMethod], 
            T.LogDescription AS [T_QWF_UserActionLog.LogDescription], 
            T.LogItems AS [T_QWF_UserActionLog.LogItems], 
            T.CreateTime AS [T_QWF_UserActionLog.CreateTime], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QWF_UserActionLog AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QWF_UserInRole.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView46()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_UserInRole
        [DbCRMkEntity_SQLServer.Store.T_QWF_UserInRole](T1.[T_QWF_UserInRole.Id], T1.[T_QWF_UserInRole.RoleId], T1.[T_QWF_UserInRole.UserId], T1.[T_QWF_UserInRole.CreateTime], T1.[T_QWF_UserInRole.CreateUserId])
    FROM (
        SELECT 
            T.Id AS [T_QWF_UserInRole.Id], 
            T.RoleId AS [T_QWF_UserInRole.RoleId], 
            T.UserId AS [T_QWF_UserInRole.UserId], 
            T.CreateTime AS [T_QWF_UserInRole.CreateTime], 
            T.CreateUserId AS [T_QWF_UserInRole.CreateUserId], 
            True AS _from0
        FROM DbCRMContext.T_QWF_UserInRole AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QWF_UserInRole.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView47()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_UserInRole
        [DbCRMkEntity_SQLServer.T_QWF_UserInRole](T1.[T_QWF_UserInRole.Id], T1.[T_QWF_UserInRole.RoleId], T1.[T_QWF_UserInRole.UserId], T1.[T_QWF_UserInRole.CreateTime], T1.[T_QWF_UserInRole.CreateUserId])
    FROM (
        SELECT 
            T.Id AS [T_QWF_UserInRole.Id], 
            T.RoleId AS [T_QWF_UserInRole.RoleId], 
            T.UserId AS [T_QWF_UserInRole.UserId], 
            T.CreateTime AS [T_QWF_UserInRole.CreateTime], 
            T.CreateUserId AS [T_QWF_UserInRole.CreateUserId], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QWF_UserInRole AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.vw_UserInRoles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView48()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vw_UserInRoles
        [DbCRMkEntity_SQLServer.Store.vw_UserInRoles](T1.[vw_UserInRoles.UserId], T1.[vw_UserInRoles.RoleIds], T1.[vw_UserInRoles.RoleCodes], T1.[vw_UserInRoles.RoleNames])
    FROM (
        SELECT 
            T.UserId AS [vw_UserInRoles.UserId], 
            T.RoleIds AS [vw_UserInRoles.RoleIds], 
            T.RoleCodes AS [vw_UserInRoles.RoleCodes], 
            T.RoleNames AS [vw_UserInRoles.RoleNames], 
            True AS _from0
        FROM DbCRMContext.vw_UserInRoles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.vw_UserInRoles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView49()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vw_UserInRoles
        [DbCRMkEntity_SQLServer.vw_UserInRoles](T1.[vw_UserInRoles.UserId], T1.[vw_UserInRoles.RoleIds], T1.[vw_UserInRoles.RoleCodes], T1.[vw_UserInRoles.RoleNames])
    FROM (
        SELECT 
            T.UserId AS [vw_UserInRoles.UserId], 
            T.RoleIds AS [vw_UserInRoles.RoleIds], 
            T.RoleCodes AS [vw_UserInRoles.RoleCodes], 
            T.RoleNames AS [vw_UserInRoles.RoleNames], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.vw_UserInRoles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QCRM_FormInput.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView50()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_FormInput
        [DbCRMkEntity_SQLServer.Store.T_QCRM_FormInput](T1.[T_QCRM_FormInput.Id], T1.[T_QCRM_FormInput.FormCode], T1.[T_QCRM_FormInput.TableCode], T1.[T_QCRM_FormInput.FieldCode], T1.[T_QCRM_FormInput.Name], T1.[T_QCRM_FormInput.InputName], T1.[T_QCRM_FormInput.InputType], T1.[T_QCRM_FormInput.DefaultValueType], T1.[T_QCRM_FormInput.DefaultValue], T1.[T_QCRM_FormInput.SortId], T1.[T_QCRM_FormInput.CreateTime], T1.[T_QCRM_FormInput.CreateUser], T1.[T_QCRM_FormInput.UpdateTime], T1.[T_QCRM_FormInput.UpdateUser], T1.[T_QCRM_FormInput.DictionaryCode], T1.[T_QCRM_FormInput.SelectItemValue], T1.[T_QCRM_FormInput.CssWidth], T1.[T_QCRM_FormInput.CssHeight], T1.[T_QCRM_FormInput.InputDesc])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_FormInput.Id], 
            T.FormCode AS [T_QCRM_FormInput.FormCode], 
            T.TableCode AS [T_QCRM_FormInput.TableCode], 
            T.FieldCode AS [T_QCRM_FormInput.FieldCode], 
            T.Name AS [T_QCRM_FormInput.Name], 
            T.InputName AS [T_QCRM_FormInput.InputName], 
            T.InputType AS [T_QCRM_FormInput.InputType], 
            T.DefaultValueType AS [T_QCRM_FormInput.DefaultValueType], 
            T.DefaultValue AS [T_QCRM_FormInput.DefaultValue], 
            T.SortId AS [T_QCRM_FormInput.SortId], 
            T.CreateTime AS [T_QCRM_FormInput.CreateTime], 
            T.CreateUser AS [T_QCRM_FormInput.CreateUser], 
            T.UpdateTime AS [T_QCRM_FormInput.UpdateTime], 
            T.UpdateUser AS [T_QCRM_FormInput.UpdateUser], 
            T.DictionaryCode AS [T_QCRM_FormInput.DictionaryCode], 
            T.SelectItemValue AS [T_QCRM_FormInput.SelectItemValue], 
            T.CssWidth AS [T_QCRM_FormInput.CssWidth], 
            T.CssHeight AS [T_QCRM_FormInput.CssHeight], 
            T.InputDesc AS [T_QCRM_FormInput.InputDesc], 
            True AS _from0
        FROM DbCRMContext.T_QCRM_FormInput AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QCRM_FormInput.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView51()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_FormInput
        [DbCRMkEntity_SQLServer.T_QCRM_FormInput](T1.[T_QCRM_FormInput.Id], T1.[T_QCRM_FormInput.FormCode], T1.[T_QCRM_FormInput.TableCode], T1.[T_QCRM_FormInput.FieldCode], T1.[T_QCRM_FormInput.Name], T1.[T_QCRM_FormInput.InputName], T1.[T_QCRM_FormInput.InputType], T1.[T_QCRM_FormInput.DefaultValueType], T1.[T_QCRM_FormInput.DefaultValue], T1.[T_QCRM_FormInput.SortId], T1.[T_QCRM_FormInput.CreateTime], T1.[T_QCRM_FormInput.CreateUser], T1.[T_QCRM_FormInput.UpdateTime], T1.[T_QCRM_FormInput.UpdateUser], T1.[T_QCRM_FormInput.DictionaryCode], T1.[T_QCRM_FormInput.SelectItemValue], T1.[T_QCRM_FormInput.CssWidth], T1.[T_QCRM_FormInput.CssHeight], T1.[T_QCRM_FormInput.InputDesc])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_FormInput.Id], 
            T.FormCode AS [T_QCRM_FormInput.FormCode], 
            T.TableCode AS [T_QCRM_FormInput.TableCode], 
            T.FieldCode AS [T_QCRM_FormInput.FieldCode], 
            T.Name AS [T_QCRM_FormInput.Name], 
            T.InputName AS [T_QCRM_FormInput.InputName], 
            T.InputType AS [T_QCRM_FormInput.InputType], 
            T.DefaultValueType AS [T_QCRM_FormInput.DefaultValueType], 
            T.DefaultValue AS [T_QCRM_FormInput.DefaultValue], 
            T.SortId AS [T_QCRM_FormInput.SortId], 
            T.CreateTime AS [T_QCRM_FormInput.CreateTime], 
            T.CreateUser AS [T_QCRM_FormInput.CreateUser], 
            T.UpdateTime AS [T_QCRM_FormInput.UpdateTime], 
            T.UpdateUser AS [T_QCRM_FormInput.UpdateUser], 
            T.DictionaryCode AS [T_QCRM_FormInput.DictionaryCode], 
            T.SelectItemValue AS [T_QCRM_FormInput.SelectItemValue], 
            T.CssWidth AS [T_QCRM_FormInput.CssWidth], 
            T.CssHeight AS [T_QCRM_FormInput.CssHeight], 
            T.InputDesc AS [T_QCRM_FormInput.InputDesc], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QCRM_FormInput AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QCRM_Tables.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView52()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_Tables
        [DbCRMkEntity_SQLServer.Store.T_QCRM_Tables](T1.[T_QCRM_Tables.Code], T1.[T_QCRM_Tables.Name], T1.[T_QCRM_Tables.Remarks], T1.[T_QCRM_Tables.CreateTime], T1.[T_QCRM_Tables.CreateUser], T1.[T_QCRM_Tables.Deleted], T1.[T_QCRM_Tables.UpdateUser], T1.[T_QCRM_Tables.UpdateTime], T1.[T_QCRM_Tables.DeleteType], T1.[T_QCRM_Tables.DeleteField], T1.[T_QCRM_Tables.DeleteFlag])
    FROM (
        SELECT 
            T.Code AS [T_QCRM_Tables.Code], 
            T.Name AS [T_QCRM_Tables.Name], 
            T.Remarks AS [T_QCRM_Tables.Remarks], 
            T.CreateTime AS [T_QCRM_Tables.CreateTime], 
            T.CreateUser AS [T_QCRM_Tables.CreateUser], 
            T.Deleted AS [T_QCRM_Tables.Deleted], 
            T.UpdateUser AS [T_QCRM_Tables.UpdateUser], 
            T.UpdateTime AS [T_QCRM_Tables.UpdateTime], 
            T.DeleteType AS [T_QCRM_Tables.DeleteType], 
            T.DeleteField AS [T_QCRM_Tables.DeleteField], 
            T.DeleteFlag AS [T_QCRM_Tables.DeleteFlag], 
            True AS _from0
        FROM DbCRMContext.T_QCRM_Tables AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QCRM_Tables.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView53()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_Tables
        [DbCRMkEntity_SQLServer.T_QCRM_Tables](T1.[T_QCRM_Tables.Code], T1.[T_QCRM_Tables.Name], T1.[T_QCRM_Tables.Remarks], T1.[T_QCRM_Tables.CreateTime], T1.[T_QCRM_Tables.CreateUser], T1.[T_QCRM_Tables.Deleted], T1.[T_QCRM_Tables.UpdateUser], T1.[T_QCRM_Tables.UpdateTime], T1.[T_QCRM_Tables.DeleteType], T1.[T_QCRM_Tables.DeleteField], T1.[T_QCRM_Tables.DeleteFlag])
    FROM (
        SELECT 
            T.Code AS [T_QCRM_Tables.Code], 
            T.Name AS [T_QCRM_Tables.Name], 
            T.Remarks AS [T_QCRM_Tables.Remarks], 
            T.CreateTime AS [T_QCRM_Tables.CreateTime], 
            T.CreateUser AS [T_QCRM_Tables.CreateUser], 
            T.Deleted AS [T_QCRM_Tables.Deleted], 
            T.UpdateUser AS [T_QCRM_Tables.UpdateUser], 
            T.UpdateTime AS [T_QCRM_Tables.UpdateTime], 
            T.DeleteType AS [T_QCRM_Tables.DeleteType], 
            T.DeleteField AS [T_QCRM_Tables.DeleteField], 
            T.DeleteFlag AS [T_QCRM_Tables.DeleteFlag], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QCRM_Tables AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QCRM_ListType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView54()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_ListType
        [DbCRMkEntity_SQLServer.Store.T_QCRM_ListType](T1.[T_QCRM_ListType.ListType], T1.[T_QCRM_ListType.TypeName], T1.[T_QCRM_ListType.IsHide], T1.[T_QCRM_ListType.Remarks], T1.[T_QCRM_ListType.TableRelation], T1.[T_QCRM_ListType.OrderBy], T1.[T_QCRM_ListType.CreateTime], T1.[T_QCRM_ListType.CreateUser], T1.[T_QCRM_ListType.UpdateTime], T1.[T_QCRM_ListType.UpdateUser], T1.[T_QCRM_ListType.PageSize], T1.[T_QCRM_ListType.AscOrDesc])
    FROM (
        SELECT 
            T.ListType AS [T_QCRM_ListType.ListType], 
            T.TypeName AS [T_QCRM_ListType.TypeName], 
            T.IsHide AS [T_QCRM_ListType.IsHide], 
            T.Remarks AS [T_QCRM_ListType.Remarks], 
            T.TableRelation AS [T_QCRM_ListType.TableRelation], 
            T.OrderBy AS [T_QCRM_ListType.OrderBy], 
            T.CreateTime AS [T_QCRM_ListType.CreateTime], 
            T.CreateUser AS [T_QCRM_ListType.CreateUser], 
            T.UpdateTime AS [T_QCRM_ListType.UpdateTime], 
            T.UpdateUser AS [T_QCRM_ListType.UpdateUser], 
            T.PageSize AS [T_QCRM_ListType.PageSize], 
            T.AscOrDesc AS [T_QCRM_ListType.AscOrDesc], 
            True AS _from0
        FROM DbCRMContext.T_QCRM_ListType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QCRM_ListType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView55()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_ListType
        [DbCRMkEntity_SQLServer.T_QCRM_ListType](T1.[T_QCRM_ListType.ListType], T1.[T_QCRM_ListType.TypeName], T1.[T_QCRM_ListType.IsHide], T1.[T_QCRM_ListType.Remarks], T1.[T_QCRM_ListType.TableRelation], T1.[T_QCRM_ListType.OrderBy], T1.[T_QCRM_ListType.CreateTime], T1.[T_QCRM_ListType.CreateUser], T1.[T_QCRM_ListType.UpdateTime], T1.[T_QCRM_ListType.UpdateUser], T1.[T_QCRM_ListType.PageSize], T1.[T_QCRM_ListType.AscOrDesc])
    FROM (
        SELECT 
            T.ListType AS [T_QCRM_ListType.ListType], 
            T.TypeName AS [T_QCRM_ListType.TypeName], 
            T.IsHide AS [T_QCRM_ListType.IsHide], 
            T.Remarks AS [T_QCRM_ListType.Remarks], 
            T.TableRelation AS [T_QCRM_ListType.TableRelation], 
            T.OrderBy AS [T_QCRM_ListType.OrderBy], 
            T.CreateTime AS [T_QCRM_ListType.CreateTime], 
            T.CreateUser AS [T_QCRM_ListType.CreateUser], 
            T.UpdateTime AS [T_QCRM_ListType.UpdateTime], 
            T.UpdateUser AS [T_QCRM_ListType.UpdateUser], 
            T.PageSize AS [T_QCRM_ListType.PageSize], 
            T.AscOrDesc AS [T_QCRM_ListType.AscOrDesc], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QCRM_ListType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QCRM_Fields.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView56()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_Fields
        [DbCRMkEntity_SQLServer.Store.T_QCRM_Fields](T1.[T_QCRM_Fields.Code], T1.[T_QCRM_Fields.TableCode], T1.[T_QCRM_Fields.Name], T1.[T_QCRM_Fields.FieldType], T1.[T_QCRM_Fields.FieldTypeLength], T1.[T_QCRM_Fields.Deleted], T1.[T_QCRM_Fields.CreateTime], T1.[T_QCRM_Fields.CreateUser], T1.[T_QCRM_Fields.UpdateTime], T1.[T_QCRM_Fields.UpdateUser], T1.[T_QCRM_Fields.Remarks], T1.[T_QCRM_Fields.PK], T1.[T_QCRM_Fields.IsNotNull], T1.[T_QCRM_Fields.OnlyKey], T1.[T_QCRM_Fields.IsVirtual])
    FROM (
        SELECT 
            T.Code AS [T_QCRM_Fields.Code], 
            T.TableCode AS [T_QCRM_Fields.TableCode], 
            T.Name AS [T_QCRM_Fields.Name], 
            T.FieldType AS [T_QCRM_Fields.FieldType], 
            T.FieldTypeLength AS [T_QCRM_Fields.FieldTypeLength], 
            T.Deleted AS [T_QCRM_Fields.Deleted], 
            T.CreateTime AS [T_QCRM_Fields.CreateTime], 
            T.CreateUser AS [T_QCRM_Fields.CreateUser], 
            T.UpdateTime AS [T_QCRM_Fields.UpdateTime], 
            T.UpdateUser AS [T_QCRM_Fields.UpdateUser], 
            T.Remarks AS [T_QCRM_Fields.Remarks], 
            T.PK AS [T_QCRM_Fields.PK], 
            T.IsNotNull AS [T_QCRM_Fields.IsNotNull], 
            T.OnlyKey AS [T_QCRM_Fields.OnlyKey], 
            T.IsVirtual AS [T_QCRM_Fields.IsVirtual], 
            True AS _from0
        FROM DbCRMContext.T_QCRM_Fields AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QCRM_Fields.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView57()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_Fields
        [DbCRMkEntity_SQLServer.T_QCRM_Fields](T1.[T_QCRM_Fields.Code], T1.[T_QCRM_Fields.TableCode], T1.[T_QCRM_Fields.Name], T1.[T_QCRM_Fields.FieldType], T1.[T_QCRM_Fields.FieldTypeLength], T1.[T_QCRM_Fields.Deleted], T1.[T_QCRM_Fields.CreateTime], T1.[T_QCRM_Fields.CreateUser], T1.[T_QCRM_Fields.UpdateTime], T1.[T_QCRM_Fields.UpdateUser], T1.[T_QCRM_Fields.Remarks], T1.[T_QCRM_Fields.PK], T1.[T_QCRM_Fields.IsNotNull], T1.[T_QCRM_Fields.OnlyKey], T1.[T_QCRM_Fields.IsVirtual])
    FROM (
        SELECT 
            T.Code AS [T_QCRM_Fields.Code], 
            T.TableCode AS [T_QCRM_Fields.TableCode], 
            T.Name AS [T_QCRM_Fields.Name], 
            T.FieldType AS [T_QCRM_Fields.FieldType], 
            T.FieldTypeLength AS [T_QCRM_Fields.FieldTypeLength], 
            T.Deleted AS [T_QCRM_Fields.Deleted], 
            T.CreateTime AS [T_QCRM_Fields.CreateTime], 
            T.CreateUser AS [T_QCRM_Fields.CreateUser], 
            T.UpdateTime AS [T_QCRM_Fields.UpdateTime], 
            T.UpdateUser AS [T_QCRM_Fields.UpdateUser], 
            T.Remarks AS [T_QCRM_Fields.Remarks], 
            T.PK AS [T_QCRM_Fields.PK], 
            T.IsNotNull AS [T_QCRM_Fields.IsNotNull], 
            T.OnlyKey AS [T_QCRM_Fields.OnlyKey], 
            T.IsVirtual AS [T_QCRM_Fields.IsVirtual], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QCRM_Fields AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QCRM_Dictionary.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView58()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_Dictionary
        [DbCRMkEntity_SQLServer.Store.T_QCRM_Dictionary](T1.[T_QCRM_Dictionary.Id], T1.[T_QCRM_Dictionary.Code], T1.[T_QCRM_Dictionary.ParentId], T1.[T_QCRM_Dictionary.ItemName], T1.[T_QCRM_Dictionary.ItemValueType], T1.[T_QCRM_Dictionary.ItemValue], T1.[T_QCRM_Dictionary.ItemSort], T1.[T_QCRM_Dictionary.Hide], T1.[T_QCRM_Dictionary.CreateTime], T1.[T_QCRM_Dictionary.CreateUser], T1.[T_QCRM_Dictionary.UpdateTime], T1.[T_QCRM_Dictionary.UpdateUser], T1.[T_QCRM_Dictionary.IdList], T1.[T_QCRM_Dictionary.IsSubNode], T1.[T_QCRM_Dictionary.LayerId], T1.[T_QCRM_Dictionary.DictionaryType], T1.[T_QCRM_Dictionary.Remarks], T1.[T_QCRM_Dictionary.ViewName], T1.[T_QCRM_Dictionary.DataSource], T1.[T_QCRM_Dictionary.ItemFullNamePath])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_Dictionary.Id], 
            T.Code AS [T_QCRM_Dictionary.Code], 
            T.ParentId AS [T_QCRM_Dictionary.ParentId], 
            T.ItemName AS [T_QCRM_Dictionary.ItemName], 
            T.ItemValueType AS [T_QCRM_Dictionary.ItemValueType], 
            T.ItemValue AS [T_QCRM_Dictionary.ItemValue], 
            T.ItemSort AS [T_QCRM_Dictionary.ItemSort], 
            T.Hide AS [T_QCRM_Dictionary.Hide], 
            T.CreateTime AS [T_QCRM_Dictionary.CreateTime], 
            T.CreateUser AS [T_QCRM_Dictionary.CreateUser], 
            T.UpdateTime AS [T_QCRM_Dictionary.UpdateTime], 
            T.UpdateUser AS [T_QCRM_Dictionary.UpdateUser], 
            T.IdList AS [T_QCRM_Dictionary.IdList], 
            T.IsSubNode AS [T_QCRM_Dictionary.IsSubNode], 
            T.LayerId AS [T_QCRM_Dictionary.LayerId], 
            T.DictionaryType AS [T_QCRM_Dictionary.DictionaryType], 
            T.Remarks AS [T_QCRM_Dictionary.Remarks], 
            T.ViewName AS [T_QCRM_Dictionary.ViewName], 
            T.DataSource AS [T_QCRM_Dictionary.DataSource], 
            T.ItemFullNamePath AS [T_QCRM_Dictionary.ItemFullNamePath], 
            True AS _from0
        FROM DbCRMContext.T_QCRM_Dictionary AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QCRM_Dictionary.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView59()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_Dictionary
        [DbCRMkEntity_SQLServer.T_QCRM_Dictionary](T1.[T_QCRM_Dictionary.Id], T1.[T_QCRM_Dictionary.Code], T1.[T_QCRM_Dictionary.ParentId], T1.[T_QCRM_Dictionary.ItemName], T1.[T_QCRM_Dictionary.ItemValueType], T1.[T_QCRM_Dictionary.ItemValue], T1.[T_QCRM_Dictionary.ItemSort], T1.[T_QCRM_Dictionary.Hide], T1.[T_QCRM_Dictionary.CreateTime], T1.[T_QCRM_Dictionary.CreateUser], T1.[T_QCRM_Dictionary.UpdateTime], T1.[T_QCRM_Dictionary.UpdateUser], T1.[T_QCRM_Dictionary.IdList], T1.[T_QCRM_Dictionary.IsSubNode], T1.[T_QCRM_Dictionary.LayerId], T1.[T_QCRM_Dictionary.DictionaryType], T1.[T_QCRM_Dictionary.Remarks], T1.[T_QCRM_Dictionary.ViewName], T1.[T_QCRM_Dictionary.DataSource], T1.[T_QCRM_Dictionary.ItemFullNamePath])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_Dictionary.Id], 
            T.Code AS [T_QCRM_Dictionary.Code], 
            T.ParentId AS [T_QCRM_Dictionary.ParentId], 
            T.ItemName AS [T_QCRM_Dictionary.ItemName], 
            T.ItemValueType AS [T_QCRM_Dictionary.ItemValueType], 
            T.ItemValue AS [T_QCRM_Dictionary.ItemValue], 
            T.ItemSort AS [T_QCRM_Dictionary.ItemSort], 
            T.Hide AS [T_QCRM_Dictionary.Hide], 
            T.CreateTime AS [T_QCRM_Dictionary.CreateTime], 
            T.CreateUser AS [T_QCRM_Dictionary.CreateUser], 
            T.UpdateTime AS [T_QCRM_Dictionary.UpdateTime], 
            T.UpdateUser AS [T_QCRM_Dictionary.UpdateUser], 
            T.IdList AS [T_QCRM_Dictionary.IdList], 
            T.IsSubNode AS [T_QCRM_Dictionary.IsSubNode], 
            T.LayerId AS [T_QCRM_Dictionary.LayerId], 
            T.DictionaryType AS [T_QCRM_Dictionary.DictionaryType], 
            T.Remarks AS [T_QCRM_Dictionary.Remarks], 
            T.ViewName AS [T_QCRM_Dictionary.ViewName], 
            T.DataSource AS [T_QCRM_Dictionary.DataSource], 
            T.ItemFullNamePath AS [T_QCRM_Dictionary.ItemFullNamePath], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QCRM_Dictionary AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QCRM_UserCenter.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView60()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_UserCenter
        [DbCRMkEntity_SQLServer.Store.T_QCRM_UserCenter](T1.[T_QCRM_UserCenter.UserCode], T1.[T_QCRM_UserCenter.UI_Style], T1.[T_QCRM_UserCenter.CreateTime], T1.[T_QCRM_UserCenter.UpdateTime])
    FROM (
        SELECT 
            T.UserCode AS [T_QCRM_UserCenter.UserCode], 
            T.UI_Style AS [T_QCRM_UserCenter.UI_Style], 
            T.CreateTime AS [T_QCRM_UserCenter.CreateTime], 
            T.UpdateTime AS [T_QCRM_UserCenter.UpdateTime], 
            True AS _from0
        FROM DbCRMContext.T_QCRM_UserCenter AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QCRM_UserCenter.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView61()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_UserCenter
        [DbCRMkEntity_SQLServer.T_QCRM_UserCenter](T1.[T_QCRM_UserCenter.UserCode], T1.[T_QCRM_UserCenter.UI_Style], T1.[T_QCRM_UserCenter.CreateTime], T1.[T_QCRM_UserCenter.UpdateTime])
    FROM (
        SELECT 
            T.UserCode AS [T_QCRM_UserCenter.UserCode], 
            T.UI_Style AS [T_QCRM_UserCenter.UI_Style], 
            T.CreateTime AS [T_QCRM_UserCenter.CreateTime], 
            T.UpdateTime AS [T_QCRM_UserCenter.UpdateTime], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QCRM_UserCenter AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QCRM_Form.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView62()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_Form
        [DbCRMkEntity_SQLServer.Store.T_QCRM_Form](T1.[T_QCRM_Form.Code], T1.[T_QCRM_Form.Name], T1.[T_QCRM_Form.MainTable], T1.[T_QCRM_Form.ActionType], T1.[T_QCRM_Form.ActionName], T1.[T_QCRM_Form.ActionStyle], T1.[T_QCRM_Form.StyleColums], T1.[T_QCRM_Form.Remarks], T1.[T_QCRM_Form.CreateTime], T1.[T_QCRM_Form.CreateUser], T1.[T_QCRM_Form.UpdateTime], T1.[T_QCRM_Form.UpdateUser], T1.[T_QCRM_Form.WindowsWidth], T1.[T_QCRM_Form.ButtonStyle], T1.[T_QCRM_Form.ButtonIcon], T1.[T_QCRM_Form.PlugInClass])
    FROM (
        SELECT 
            T.Code AS [T_QCRM_Form.Code], 
            T.Name AS [T_QCRM_Form.Name], 
            T.MainTable AS [T_QCRM_Form.MainTable], 
            T.ActionType AS [T_QCRM_Form.ActionType], 
            T.ActionName AS [T_QCRM_Form.ActionName], 
            T.ActionStyle AS [T_QCRM_Form.ActionStyle], 
            T.StyleColums AS [T_QCRM_Form.StyleColums], 
            T.Remarks AS [T_QCRM_Form.Remarks], 
            T.CreateTime AS [T_QCRM_Form.CreateTime], 
            T.CreateUser AS [T_QCRM_Form.CreateUser], 
            T.UpdateTime AS [T_QCRM_Form.UpdateTime], 
            T.UpdateUser AS [T_QCRM_Form.UpdateUser], 
            T.WindowsWidth AS [T_QCRM_Form.WindowsWidth], 
            T.ButtonStyle AS [T_QCRM_Form.ButtonStyle], 
            T.ButtonIcon AS [T_QCRM_Form.ButtonIcon], 
            T.PlugInClass AS [T_QCRM_Form.PlugInClass], 
            True AS _from0
        FROM DbCRMContext.T_QCRM_Form AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QCRM_Form.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView63()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_Form
        [DbCRMkEntity_SQLServer.T_QCRM_Form](T1.[T_QCRM_Form.Code], T1.[T_QCRM_Form.Name], T1.[T_QCRM_Form.MainTable], T1.[T_QCRM_Form.ActionType], T1.[T_QCRM_Form.ActionName], T1.[T_QCRM_Form.ActionStyle], T1.[T_QCRM_Form.StyleColums], T1.[T_QCRM_Form.Remarks], T1.[T_QCRM_Form.CreateTime], T1.[T_QCRM_Form.CreateUser], T1.[T_QCRM_Form.UpdateTime], T1.[T_QCRM_Form.UpdateUser], T1.[T_QCRM_Form.WindowsWidth], T1.[T_QCRM_Form.ButtonStyle], T1.[T_QCRM_Form.ButtonIcon], T1.[T_QCRM_Form.PlugInClass])
    FROM (
        SELECT 
            T.Code AS [T_QCRM_Form.Code], 
            T.Name AS [T_QCRM_Form.Name], 
            T.MainTable AS [T_QCRM_Form.MainTable], 
            T.ActionType AS [T_QCRM_Form.ActionType], 
            T.ActionName AS [T_QCRM_Form.ActionName], 
            T.ActionStyle AS [T_QCRM_Form.ActionStyle], 
            T.StyleColums AS [T_QCRM_Form.StyleColums], 
            T.Remarks AS [T_QCRM_Form.Remarks], 
            T.CreateTime AS [T_QCRM_Form.CreateTime], 
            T.CreateUser AS [T_QCRM_Form.CreateUser], 
            T.UpdateTime AS [T_QCRM_Form.UpdateTime], 
            T.UpdateUser AS [T_QCRM_Form.UpdateUser], 
            T.WindowsWidth AS [T_QCRM_Form.WindowsWidth], 
            T.ButtonStyle AS [T_QCRM_Form.ButtonStyle], 
            T.ButtonIcon AS [T_QCRM_Form.ButtonIcon], 
            T.PlugInClass AS [T_QCRM_Form.PlugInClass], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QCRM_Form AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QCRM_RoleInQueryCategory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView64()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_RoleInQueryCategory
        [DbCRMkEntity_SQLServer.Store.T_QCRM_RoleInQueryCategory](T1.[T_QCRM_RoleInQueryCategory.RoleCode], T1.[T_QCRM_RoleInQueryCategory.CategoryId], T1.[T_QCRM_RoleInQueryCategory.CreateUser], T1.[T_QCRM_RoleInQueryCategory.CreateTime])
    FROM (
        SELECT 
            T.RoleCode AS [T_QCRM_RoleInQueryCategory.RoleCode], 
            T.CategoryId AS [T_QCRM_RoleInQueryCategory.CategoryId], 
            T.CreateUser AS [T_QCRM_RoleInQueryCategory.CreateUser], 
            T.CreateTime AS [T_QCRM_RoleInQueryCategory.CreateTime], 
            True AS _from0
        FROM DbCRMContext.T_QCRM_RoleInQueryCategory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QCRM_RoleInQueryCategory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView65()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_RoleInQueryCategory
        [DbCRMkEntity_SQLServer.T_QCRM_RoleInQueryCategory](T1.[T_QCRM_RoleInQueryCategory.RoleCode], T1.[T_QCRM_RoleInQueryCategory.CategoryId], T1.[T_QCRM_RoleInQueryCategory.CreateUser], T1.[T_QCRM_RoleInQueryCategory.CreateTime])
    FROM (
        SELECT 
            T.RoleCode AS [T_QCRM_RoleInQueryCategory.RoleCode], 
            T.CategoryId AS [T_QCRM_RoleInQueryCategory.CategoryId], 
            T.CreateUser AS [T_QCRM_RoleInQueryCategory.CreateUser], 
            T.CreateTime AS [T_QCRM_RoleInQueryCategory.CreateTime], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QCRM_RoleInQueryCategory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QCRM_QueryList.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView66()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_QueryList
        [DbCRMkEntity_SQLServer.Store.T_QCRM_QueryList](T1.[T_QCRM_QueryList.Id], T1.[T_QCRM_QueryList.ListType], T1.[T_QCRM_QueryList.TableCode], T1.[T_QCRM_QueryList.FieldCode], T1.[T_QCRM_QueryList.StyleWidth], T1.[T_QCRM_QueryList.SortId], T1.[T_QCRM_QueryList.StyleCss], T1.[T_QCRM_QueryList.TitleName], T1.[T_QCRM_QueryList.CreateUser], T1.[T_QCRM_QueryList.CreateTime], T1.[T_QCRM_QueryList.UpdateUser], T1.[T_QCRM_QueryList.UpdateTime], T1.[T_QCRM_QueryList.FieldFormatter], T1.[T_QCRM_QueryList.FormatterType], T1.[T_QCRM_QueryList.FieldType], T1.[T_QCRM_QueryList.Checkbox], T1.[T_QCRM_QueryList.Hide], T1.[T_QCRM_QueryList.Sortable], T1.[T_QCRM_QueryList.IsUserField])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_QueryList.Id], 
            T.ListType AS [T_QCRM_QueryList.ListType], 
            T.TableCode AS [T_QCRM_QueryList.TableCode], 
            T.FieldCode AS [T_QCRM_QueryList.FieldCode], 
            T.StyleWidth AS [T_QCRM_QueryList.StyleWidth], 
            T.SortId AS [T_QCRM_QueryList.SortId], 
            T.StyleCss AS [T_QCRM_QueryList.StyleCss], 
            T.TitleName AS [T_QCRM_QueryList.TitleName], 
            T.CreateUser AS [T_QCRM_QueryList.CreateUser], 
            T.CreateTime AS [T_QCRM_QueryList.CreateTime], 
            T.UpdateUser AS [T_QCRM_QueryList.UpdateUser], 
            T.UpdateTime AS [T_QCRM_QueryList.UpdateTime], 
            T.FieldFormatter AS [T_QCRM_QueryList.FieldFormatter], 
            T.FormatterType AS [T_QCRM_QueryList.FormatterType], 
            T.FieldType AS [T_QCRM_QueryList.FieldType], 
            T.Checkbox AS [T_QCRM_QueryList.Checkbox], 
            T.Hide AS [T_QCRM_QueryList.Hide], 
            T.Sortable AS [T_QCRM_QueryList.Sortable], 
            T.IsUserField AS [T_QCRM_QueryList.IsUserField], 
            True AS _from0
        FROM DbCRMContext.T_QCRM_QueryList AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QCRM_QueryList.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView67()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_QueryList
        [DbCRMkEntity_SQLServer.T_QCRM_QueryList](T1.[T_QCRM_QueryList.Id], T1.[T_QCRM_QueryList.ListType], T1.[T_QCRM_QueryList.TableCode], T1.[T_QCRM_QueryList.FieldCode], T1.[T_QCRM_QueryList.StyleWidth], T1.[T_QCRM_QueryList.SortId], T1.[T_QCRM_QueryList.StyleCss], T1.[T_QCRM_QueryList.TitleName], T1.[T_QCRM_QueryList.CreateUser], T1.[T_QCRM_QueryList.CreateTime], T1.[T_QCRM_QueryList.UpdateUser], T1.[T_QCRM_QueryList.UpdateTime], T1.[T_QCRM_QueryList.FieldFormatter], T1.[T_QCRM_QueryList.FormatterType], T1.[T_QCRM_QueryList.FieldType], T1.[T_QCRM_QueryList.Checkbox], T1.[T_QCRM_QueryList.Hide], T1.[T_QCRM_QueryList.Sortable], T1.[T_QCRM_QueryList.IsUserField])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_QueryList.Id], 
            T.ListType AS [T_QCRM_QueryList.ListType], 
            T.TableCode AS [T_QCRM_QueryList.TableCode], 
            T.FieldCode AS [T_QCRM_QueryList.FieldCode], 
            T.StyleWidth AS [T_QCRM_QueryList.StyleWidth], 
            T.SortId AS [T_QCRM_QueryList.SortId], 
            T.StyleCss AS [T_QCRM_QueryList.StyleCss], 
            T.TitleName AS [T_QCRM_QueryList.TitleName], 
            T.CreateUser AS [T_QCRM_QueryList.CreateUser], 
            T.CreateTime AS [T_QCRM_QueryList.CreateTime], 
            T.UpdateUser AS [T_QCRM_QueryList.UpdateUser], 
            T.UpdateTime AS [T_QCRM_QueryList.UpdateTime], 
            T.FieldFormatter AS [T_QCRM_QueryList.FieldFormatter], 
            T.FormatterType AS [T_QCRM_QueryList.FormatterType], 
            T.FieldType AS [T_QCRM_QueryList.FieldType], 
            T.Checkbox AS [T_QCRM_QueryList.Checkbox], 
            T.Hide AS [T_QCRM_QueryList.Hide], 
            T.Sortable AS [T_QCRM_QueryList.Sortable], 
            T.IsUserField AS [T_QCRM_QueryList.IsUserField], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QCRM_QueryList AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QCRM_QueryCategory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView68()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_QueryCategory
        [DbCRMkEntity_SQLServer.Store.T_QCRM_QueryCategory](T1.[T_QCRM_QueryCategory.Id], T1.[T_QCRM_QueryCategory.Name], T1.[T_QCRM_QueryCategory.Remarks], T1.[T_QCRM_QueryCategory.ParentId], T1.[T_QCRM_QueryCategory.SortId], T1.[T_QCRM_QueryCategory.ShareType], T1.[T_QCRM_QueryCategory.CreateTime], T1.[T_QCRM_QueryCategory.CreateUser], T1.[T_QCRM_QueryCategory.UpdateTime], T1.[T_QCRM_QueryCategory.UpdateUser], T1.[T_QCRM_QueryCategory.SortField], T1.[T_QCRM_QueryCategory.AscOrDesc], T1.[T_QCRM_QueryCategory.AndOr])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_QueryCategory.Id], 
            T.Name AS [T_QCRM_QueryCategory.Name], 
            T.Remarks AS [T_QCRM_QueryCategory.Remarks], 
            T.ParentId AS [T_QCRM_QueryCategory.ParentId], 
            T.SortId AS [T_QCRM_QueryCategory.SortId], 
            T.ShareType AS [T_QCRM_QueryCategory.ShareType], 
            T.CreateTime AS [T_QCRM_QueryCategory.CreateTime], 
            T.CreateUser AS [T_QCRM_QueryCategory.CreateUser], 
            T.UpdateTime AS [T_QCRM_QueryCategory.UpdateTime], 
            T.UpdateUser AS [T_QCRM_QueryCategory.UpdateUser], 
            T.SortField AS [T_QCRM_QueryCategory.SortField], 
            T.AscOrDesc AS [T_QCRM_QueryCategory.AscOrDesc], 
            T.AndOr AS [T_QCRM_QueryCategory.AndOr], 
            True AS _from0
        FROM DbCRMContext.T_QCRM_QueryCategory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QCRM_QueryCategory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView69()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_QueryCategory
        [DbCRMkEntity_SQLServer.T_QCRM_QueryCategory](T1.[T_QCRM_QueryCategory.Id], T1.[T_QCRM_QueryCategory.Name], T1.[T_QCRM_QueryCategory.Remarks], T1.[T_QCRM_QueryCategory.ParentId], T1.[T_QCRM_QueryCategory.SortId], T1.[T_QCRM_QueryCategory.ShareType], T1.[T_QCRM_QueryCategory.CreateTime], T1.[T_QCRM_QueryCategory.CreateUser], T1.[T_QCRM_QueryCategory.UpdateTime], T1.[T_QCRM_QueryCategory.UpdateUser], T1.[T_QCRM_QueryCategory.SortField], T1.[T_QCRM_QueryCategory.AscOrDesc], T1.[T_QCRM_QueryCategory.AndOr])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_QueryCategory.Id], 
            T.Name AS [T_QCRM_QueryCategory.Name], 
            T.Remarks AS [T_QCRM_QueryCategory.Remarks], 
            T.ParentId AS [T_QCRM_QueryCategory.ParentId], 
            T.SortId AS [T_QCRM_QueryCategory.SortId], 
            T.ShareType AS [T_QCRM_QueryCategory.ShareType], 
            T.CreateTime AS [T_QCRM_QueryCategory.CreateTime], 
            T.CreateUser AS [T_QCRM_QueryCategory.CreateUser], 
            T.UpdateTime AS [T_QCRM_QueryCategory.UpdateTime], 
            T.UpdateUser AS [T_QCRM_QueryCategory.UpdateUser], 
            T.SortField AS [T_QCRM_QueryCategory.SortField], 
            T.AscOrDesc AS [T_QCRM_QueryCategory.AscOrDesc], 
            T.AndOr AS [T_QCRM_QueryCategory.AndOr], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QCRM_QueryCategory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMkEntity_SQLServerStoreContainer.T_QCRM_QueryWhere.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView70()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_QueryWhere
        [DbCRMkEntity_SQLServer.Store.T_QCRM_QueryWhere](T1.[T_QCRM_QueryWhere.Id], T1.[T_QCRM_QueryWhere.QueryCategoryId], T1.[T_QCRM_QueryWhere.FieldCode], T1.[T_QCRM_QueryWhere.Expression], T1.[T_QCRM_QueryWhere.FieldValue], T1.[T_QCRM_QueryWhere.FieldValueType], T1.[T_QCRM_QueryWhere.StaticDateValue], T1.[T_QCRM_QueryWhere.DateNum], T1.[T_QCRM_QueryWhere.DateType], T1.[T_QCRM_QueryWhere.CreateTime], T1.[T_QCRM_QueryWhere.CreateUser], T1.[T_QCRM_QueryWhere.UpdateTime], T1.[T_QCRM_QueryWhere.UpdateUser], T1.[T_QCRM_QueryWhere.FieldQueryType], T1.[T_QCRM_QueryWhere.UserCodeType], T1.[T_QCRM_QueryWhere.UserCode], T1.[T_QCRM_QueryWhere.SortId])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_QueryWhere.Id], 
            T.QueryCategoryId AS [T_QCRM_QueryWhere.QueryCategoryId], 
            T.FieldCode AS [T_QCRM_QueryWhere.FieldCode], 
            T.Expression AS [T_QCRM_QueryWhere.Expression], 
            T.FieldValue AS [T_QCRM_QueryWhere.FieldValue], 
            T.FieldValueType AS [T_QCRM_QueryWhere.FieldValueType], 
            T.StaticDateValue AS [T_QCRM_QueryWhere.StaticDateValue], 
            T.DateNum AS [T_QCRM_QueryWhere.DateNum], 
            T.DateType AS [T_QCRM_QueryWhere.DateType], 
            T.CreateTime AS [T_QCRM_QueryWhere.CreateTime], 
            T.CreateUser AS [T_QCRM_QueryWhere.CreateUser], 
            T.UpdateTime AS [T_QCRM_QueryWhere.UpdateTime], 
            T.UpdateUser AS [T_QCRM_QueryWhere.UpdateUser], 
            T.FieldQueryType AS [T_QCRM_QueryWhere.FieldQueryType], 
            T.UserCodeType AS [T_QCRM_QueryWhere.UserCodeType], 
            T.UserCode AS [T_QCRM_QueryWhere.UserCode], 
            T.SortId AS [T_QCRM_QueryWhere.SortId], 
            True AS _from0
        FROM DbCRMContext.T_QCRM_QueryWhere AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbCRMContext.T_QCRM_QueryWhere.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView71()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QCRM_QueryWhere
        [DbCRMkEntity_SQLServer.T_QCRM_QueryWhere](T1.[T_QCRM_QueryWhere.Id], T1.[T_QCRM_QueryWhere.QueryCategoryId], T1.[T_QCRM_QueryWhere.FieldCode], T1.[T_QCRM_QueryWhere.Expression], T1.[T_QCRM_QueryWhere.FieldValue], T1.[T_QCRM_QueryWhere.FieldValueType], T1.[T_QCRM_QueryWhere.StaticDateValue], T1.[T_QCRM_QueryWhere.DateNum], T1.[T_QCRM_QueryWhere.DateType], T1.[T_QCRM_QueryWhere.CreateTime], T1.[T_QCRM_QueryWhere.CreateUser], T1.[T_QCRM_QueryWhere.UpdateTime], T1.[T_QCRM_QueryWhere.UpdateUser], T1.[T_QCRM_QueryWhere.FieldQueryType], T1.[T_QCRM_QueryWhere.UserCodeType], T1.[T_QCRM_QueryWhere.UserCode], T1.[T_QCRM_QueryWhere.SortId])
    FROM (
        SELECT 
            T.Id AS [T_QCRM_QueryWhere.Id], 
            T.QueryCategoryId AS [T_QCRM_QueryWhere.QueryCategoryId], 
            T.FieldCode AS [T_QCRM_QueryWhere.FieldCode], 
            T.Expression AS [T_QCRM_QueryWhere.Expression], 
            T.FieldValue AS [T_QCRM_QueryWhere.FieldValue], 
            T.FieldValueType AS [T_QCRM_QueryWhere.FieldValueType], 
            T.StaticDateValue AS [T_QCRM_QueryWhere.StaticDateValue], 
            T.DateNum AS [T_QCRM_QueryWhere.DateNum], 
            T.DateType AS [T_QCRM_QueryWhere.DateType], 
            T.CreateTime AS [T_QCRM_QueryWhere.CreateTime], 
            T.CreateUser AS [T_QCRM_QueryWhere.CreateUser], 
            T.UpdateTime AS [T_QCRM_QueryWhere.UpdateTime], 
            T.UpdateUser AS [T_QCRM_QueryWhere.UpdateUser], 
            T.FieldQueryType AS [T_QCRM_QueryWhere.FieldQueryType], 
            T.UserCodeType AS [T_QCRM_QueryWhere.UserCodeType], 
            T.UserCode AS [T_QCRM_QueryWhere.UserCode], 
            T.SortId AS [T_QCRM_QueryWhere.SortId], 
            True AS _from0
        FROM DbCRMkEntity_SQLServerStoreContainer.T_QCRM_QueryWhere AS T
    ) AS T1");
        }
    }
}
