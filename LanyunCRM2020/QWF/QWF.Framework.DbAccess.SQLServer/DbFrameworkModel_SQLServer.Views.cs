//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(QWF.Framework.DbAccess.DbFrameworkContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsb5ff31974e1aac59f3dd916693c164a731b22fc28407465967a4e9eba2f54a2c))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")]
    internal sealed class ViewsForBaseEntitySetsb5ff31974e1aac59f3dd916693c164a731b22fc28407465967a4e9eba2f54a2c : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "b5ff31974e1aac59f3dd916693c164a731b22fc28407465967a4e9eba2f54a2c"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "DbFrameworkEntity_SQLServerStoreContainer.T_QWF_Config")
            {
                return GetView0();
            }

            if (extentName == "DbFrameworkContext.T_QWF_Config")
            {
                return GetView1();
            }

            if (extentName == "DbFrameworkEntity_SQLServerStoreContainer.T_QWF_LoginLog")
            {
                return GetView2();
            }

            if (extentName == "DbFrameworkContext.T_QWF_LoginLog")
            {
                return GetView3();
            }

            if (extentName == "DbFrameworkEntity_SQLServerStoreContainer.T_QWF_Menu")
            {
                return GetView4();
            }

            if (extentName == "DbFrameworkContext.T_QWF_Menu")
            {
                return GetView5();
            }

            if (extentName == "DbFrameworkEntity_SQLServerStoreContainer.T_QWF_MenuInUrl")
            {
                return GetView6();
            }

            if (extentName == "DbFrameworkContext.T_QWF_MenuInUrl")
            {
                return GetView7();
            }

            if (extentName == "DbFrameworkEntity_SQLServerStoreContainer.T_QWF_Org")
            {
                return GetView8();
            }

            if (extentName == "DbFrameworkContext.T_QWF_Org")
            {
                return GetView9();
            }

            if (extentName == "DbFrameworkEntity_SQLServerStoreContainer.T_QWF_Resource")
            {
                return GetView10();
            }

            if (extentName == "DbFrameworkContext.T_QWF_Resource")
            {
                return GetView11();
            }

            if (extentName == "DbFrameworkEntity_SQLServerStoreContainer.T_QWF_Role")
            {
                return GetView12();
            }

            if (extentName == "DbFrameworkContext.T_QWF_Role")
            {
                return GetView13();
            }

            if (extentName == "DbFrameworkEntity_SQLServerStoreContainer.T_QWF_RoleGroup")
            {
                return GetView14();
            }

            if (extentName == "DbFrameworkContext.T_QWF_RoleGroup")
            {
                return GetView15();
            }

            if (extentName == "DbFrameworkEntity_SQLServerStoreContainer.T_QWF_RoleInMenu")
            {
                return GetView16();
            }

            if (extentName == "DbFrameworkContext.T_QWF_RoleInMenu")
            {
                return GetView17();
            }

            if (extentName == "DbFrameworkEntity_SQLServerStoreContainer.T_QWF_RoleInResource")
            {
                return GetView18();
            }

            if (extentName == "DbFrameworkContext.T_QWF_RoleInResource")
            {
                return GetView19();
            }

            if (extentName == "DbFrameworkEntity_SQLServerStoreContainer.T_QWF_Seq")
            {
                return GetView20();
            }

            if (extentName == "DbFrameworkContext.T_QWF_Seq")
            {
                return GetView21();
            }

            if (extentName == "DbFrameworkEntity_SQLServerStoreContainer.T_QWF_User")
            {
                return GetView22();
            }

            if (extentName == "DbFrameworkContext.T_QWF_User")
            {
                return GetView23();
            }

            if (extentName == "DbFrameworkEntity_SQLServerStoreContainer.T_QWF_UserActionLog")
            {
                return GetView24();
            }

            if (extentName == "DbFrameworkContext.T_QWF_UserActionLog")
            {
                return GetView25();
            }

            if (extentName == "DbFrameworkEntity_SQLServerStoreContainer.T_QWF_UserInRole")
            {
                return GetView26();
            }

            if (extentName == "DbFrameworkContext.T_QWF_UserInRole")
            {
                return GetView27();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for DbFrameworkEntity_SQLServerStoreContainer.T_QWF_Config.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_Config
        [DbFrameworkEntity_SQLServer.Store.T_QWF_Config](T1.[T_QWF_Config.ConfigId], T1.[T_QWF_Config.ConfigResourceCode], T1.[T_QWF_Config.ConfigName], T1.[T_QWF_Config.ConfigValueType], T1.[T_QWF_Config.ConfigValue], T1.[T_QWF_Config.ParentId], T1.[T_QWF_Config.LayerId], T1.[T_QWF_Config.ConfigIdList], T1.[T_QWF_Config.SortId], T1.[T_QWF_Config.IsDelete], T1.[T_QWF_Config.IsHidden], T1.[T_QWF_Config.CreateTime], T1.[T_QWF_Config.UpdateTime], T1.[T_QWF_Config.IsSubNode], T1.[T_QWF_Config.ConfigRemarks], T1.[T_QWF_Config.CreateUserId], T1.[T_QWF_Config.UpdateUserId])
    FROM (
        SELECT 
            T.ConfigId AS [T_QWF_Config.ConfigId], 
            T.ConfigResourceCode AS [T_QWF_Config.ConfigResourceCode], 
            T.ConfigName AS [T_QWF_Config.ConfigName], 
            T.ConfigValueType AS [T_QWF_Config.ConfigValueType], 
            T.ConfigValue AS [T_QWF_Config.ConfigValue], 
            T.ParentId AS [T_QWF_Config.ParentId], 
            T.LayerId AS [T_QWF_Config.LayerId], 
            T.ConfigIdList AS [T_QWF_Config.ConfigIdList], 
            T.SortId AS [T_QWF_Config.SortId], 
            T.IsDelete AS [T_QWF_Config.IsDelete], 
            T.IsHidden AS [T_QWF_Config.IsHidden], 
            T.CreateTime AS [T_QWF_Config.CreateTime], 
            T.UpdateTime AS [T_QWF_Config.UpdateTime], 
            T.IsSubNode AS [T_QWF_Config.IsSubNode], 
            T.ConfigRemarks AS [T_QWF_Config.ConfigRemarks], 
            T.CreateUserId AS [T_QWF_Config.CreateUserId], 
            T.UpdateUserId AS [T_QWF_Config.UpdateUserId], 
            True AS _from0
        FROM DbFrameworkContext.T_QWF_Config AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkContext.T_QWF_Config.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_Config
        [DbFrameworkEntity_SQLServer.T_QWF_Config](T1.[T_QWF_Config.ConfigId], T1.[T_QWF_Config.ConfigResourceCode], T1.[T_QWF_Config.ConfigName], T1.[T_QWF_Config.ConfigValueType], T1.[T_QWF_Config.ConfigValue], T1.[T_QWF_Config.ParentId], T1.[T_QWF_Config.LayerId], T1.[T_QWF_Config.ConfigIdList], T1.[T_QWF_Config.SortId], T1.[T_QWF_Config.IsDelete], T1.[T_QWF_Config.IsHidden], T1.[T_QWF_Config.CreateTime], T1.[T_QWF_Config.UpdateTime], T1.[T_QWF_Config.IsSubNode], T1.[T_QWF_Config.ConfigRemarks], T1.[T_QWF_Config.CreateUserId], T1.[T_QWF_Config.UpdateUserId])
    FROM (
        SELECT 
            T.ConfigId AS [T_QWF_Config.ConfigId], 
            T.ConfigResourceCode AS [T_QWF_Config.ConfigResourceCode], 
            T.ConfigName AS [T_QWF_Config.ConfigName], 
            T.ConfigValueType AS [T_QWF_Config.ConfigValueType], 
            T.ConfigValue AS [T_QWF_Config.ConfigValue], 
            T.ParentId AS [T_QWF_Config.ParentId], 
            T.LayerId AS [T_QWF_Config.LayerId], 
            T.ConfigIdList AS [T_QWF_Config.ConfigIdList], 
            T.SortId AS [T_QWF_Config.SortId], 
            T.IsDelete AS [T_QWF_Config.IsDelete], 
            T.IsHidden AS [T_QWF_Config.IsHidden], 
            T.CreateTime AS [T_QWF_Config.CreateTime], 
            T.UpdateTime AS [T_QWF_Config.UpdateTime], 
            T.IsSubNode AS [T_QWF_Config.IsSubNode], 
            T.ConfigRemarks AS [T_QWF_Config.ConfigRemarks], 
            T.CreateUserId AS [T_QWF_Config.CreateUserId], 
            T.UpdateUserId AS [T_QWF_Config.UpdateUserId], 
            True AS _from0
        FROM DbFrameworkEntity_SQLServerStoreContainer.T_QWF_Config AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkEntity_SQLServerStoreContainer.T_QWF_LoginLog.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_LoginLog
        [DbFrameworkEntity_SQLServer.Store.T_QWF_LoginLog](T1.[T_QWF_LoginLog.Id], T1.[T_QWF_LoginLog.AppId], T1.[T_QWF_LoginLog.UserName], T1.[T_QWF_LoginLog.Ip], T1.[T_QWF_LoginLog.LoginTime], T1.[T_QWF_LoginLog.LoginStatus], T1.[T_QWF_LoginLog.Remarks])
    FROM (
        SELECT 
            T.Id AS [T_QWF_LoginLog.Id], 
            T.AppId AS [T_QWF_LoginLog.AppId], 
            T.UserName AS [T_QWF_LoginLog.UserName], 
            T.Ip AS [T_QWF_LoginLog.Ip], 
            T.LoginTime AS [T_QWF_LoginLog.LoginTime], 
            T.LoginStatus AS [T_QWF_LoginLog.LoginStatus], 
            T.Remarks AS [T_QWF_LoginLog.Remarks], 
            True AS _from0
        FROM DbFrameworkContext.T_QWF_LoginLog AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkContext.T_QWF_LoginLog.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_LoginLog
        [DbFrameworkEntity_SQLServer.T_QWF_LoginLog](T1.[T_QWF_LoginLog.Id], T1.[T_QWF_LoginLog.AppId], T1.[T_QWF_LoginLog.UserName], T1.[T_QWF_LoginLog.Ip], T1.[T_QWF_LoginLog.LoginTime], T1.[T_QWF_LoginLog.LoginStatus], T1.[T_QWF_LoginLog.Remarks])
    FROM (
        SELECT 
            T.Id AS [T_QWF_LoginLog.Id], 
            T.AppId AS [T_QWF_LoginLog.AppId], 
            T.UserName AS [T_QWF_LoginLog.UserName], 
            T.Ip AS [T_QWF_LoginLog.Ip], 
            T.LoginTime AS [T_QWF_LoginLog.LoginTime], 
            T.LoginStatus AS [T_QWF_LoginLog.LoginStatus], 
            T.Remarks AS [T_QWF_LoginLog.Remarks], 
            True AS _from0
        FROM DbFrameworkEntity_SQLServerStoreContainer.T_QWF_LoginLog AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkEntity_SQLServerStoreContainer.T_QWF_Menu.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_Menu
        [DbFrameworkEntity_SQLServer.Store.T_QWF_Menu](T1.[T_QWF_Menu.MenuId], T1.[T_QWF_Menu.ParentId], T1.[T_QWF_Menu.LayerId], T1.[T_QWF_Menu.MenuIdList], T1.[T_QWF_Menu.SortId], T1.[T_QWF_Menu.MenuName], T1.[T_QWF_Menu.CreateTime], T1.[T_QWF_Menu.UpdateTime], T1.[T_QWF_Menu.IsShow], T1.[T_QWF_Menu.DefaultUrl], T1.[T_QWF_Menu.CreateUserId], T1.[T_QWF_Menu.UpdateUserId], T1.[T_QWF_Menu.IconCls], T1.[T_QWF_Menu.IsSubNode], T1.[T_QWF_Menu.Target])
    FROM (
        SELECT 
            T.MenuId AS [T_QWF_Menu.MenuId], 
            T.ParentId AS [T_QWF_Menu.ParentId], 
            T.LayerId AS [T_QWF_Menu.LayerId], 
            T.MenuIdList AS [T_QWF_Menu.MenuIdList], 
            T.SortId AS [T_QWF_Menu.SortId], 
            T.MenuName AS [T_QWF_Menu.MenuName], 
            T.CreateTime AS [T_QWF_Menu.CreateTime], 
            T.UpdateTime AS [T_QWF_Menu.UpdateTime], 
            T.IsShow AS [T_QWF_Menu.IsShow], 
            T.DefaultUrl AS [T_QWF_Menu.DefaultUrl], 
            T.CreateUserId AS [T_QWF_Menu.CreateUserId], 
            T.UpdateUserId AS [T_QWF_Menu.UpdateUserId], 
            T.IconCls AS [T_QWF_Menu.IconCls], 
            T.IsSubNode AS [T_QWF_Menu.IsSubNode], 
            T.Target AS [T_QWF_Menu.Target], 
            True AS _from0
        FROM DbFrameworkContext.T_QWF_Menu AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkContext.T_QWF_Menu.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_Menu
        [DbFrameworkEntity_SQLServer.T_QWF_Menu](T1.[T_QWF_Menu.MenuId], T1.[T_QWF_Menu.ParentId], T1.[T_QWF_Menu.LayerId], T1.[T_QWF_Menu.MenuIdList], T1.[T_QWF_Menu.SortId], T1.[T_QWF_Menu.MenuName], T1.[T_QWF_Menu.CreateTime], T1.[T_QWF_Menu.UpdateTime], T1.[T_QWF_Menu.IsShow], T1.[T_QWF_Menu.DefaultUrl], T1.[T_QWF_Menu.CreateUserId], T1.[T_QWF_Menu.UpdateUserId], T1.[T_QWF_Menu.IconCls], T1.[T_QWF_Menu.IsSubNode], T1.[T_QWF_Menu.Target])
    FROM (
        SELECT 
            T.MenuId AS [T_QWF_Menu.MenuId], 
            T.ParentId AS [T_QWF_Menu.ParentId], 
            T.LayerId AS [T_QWF_Menu.LayerId], 
            T.MenuIdList AS [T_QWF_Menu.MenuIdList], 
            T.SortId AS [T_QWF_Menu.SortId], 
            T.MenuName AS [T_QWF_Menu.MenuName], 
            T.CreateTime AS [T_QWF_Menu.CreateTime], 
            T.UpdateTime AS [T_QWF_Menu.UpdateTime], 
            T.IsShow AS [T_QWF_Menu.IsShow], 
            T.DefaultUrl AS [T_QWF_Menu.DefaultUrl], 
            T.CreateUserId AS [T_QWF_Menu.CreateUserId], 
            T.UpdateUserId AS [T_QWF_Menu.UpdateUserId], 
            T.IconCls AS [T_QWF_Menu.IconCls], 
            T.IsSubNode AS [T_QWF_Menu.IsSubNode], 
            T.Target AS [T_QWF_Menu.Target], 
            True AS _from0
        FROM DbFrameworkEntity_SQLServerStoreContainer.T_QWF_Menu AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkEntity_SQLServerStoreContainer.T_QWF_MenuInUrl.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_MenuInUrl
        [DbFrameworkEntity_SQLServer.Store.T_QWF_MenuInUrl](T1.[T_QWF_MenuInUrl.Id], T1.[T_QWF_MenuInUrl.MenuId], T1.[T_QWF_MenuInUrl.Url], T1.[T_QWF_MenuInUrl.CreateTime], T1.[T_QWF_MenuInUrl.CreateUserId])
    FROM (
        SELECT 
            T.Id AS [T_QWF_MenuInUrl.Id], 
            T.MenuId AS [T_QWF_MenuInUrl.MenuId], 
            T.Url AS [T_QWF_MenuInUrl.Url], 
            T.CreateTime AS [T_QWF_MenuInUrl.CreateTime], 
            T.CreateUserId AS [T_QWF_MenuInUrl.CreateUserId], 
            True AS _from0
        FROM DbFrameworkContext.T_QWF_MenuInUrl AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkContext.T_QWF_MenuInUrl.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_MenuInUrl
        [DbFrameworkEntity_SQLServer.T_QWF_MenuInUrl](T1.[T_QWF_MenuInUrl.Id], T1.[T_QWF_MenuInUrl.MenuId], T1.[T_QWF_MenuInUrl.Url], T1.[T_QWF_MenuInUrl.CreateTime], T1.[T_QWF_MenuInUrl.CreateUserId])
    FROM (
        SELECT 
            T.Id AS [T_QWF_MenuInUrl.Id], 
            T.MenuId AS [T_QWF_MenuInUrl.MenuId], 
            T.Url AS [T_QWF_MenuInUrl.Url], 
            T.CreateTime AS [T_QWF_MenuInUrl.CreateTime], 
            T.CreateUserId AS [T_QWF_MenuInUrl.CreateUserId], 
            True AS _from0
        FROM DbFrameworkEntity_SQLServerStoreContainer.T_QWF_MenuInUrl AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkEntity_SQLServerStoreContainer.T_QWF_Org.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_Org
        [DbFrameworkEntity_SQLServer.Store.T_QWF_Org](T1.[T_QWF_Org.OrgId], T1.[T_QWF_Org.OrgCode], T1.[T_QWF_Org.OrgName], T1.[T_QWF_Org.OrgNamePath], T1.[T_QWF_Org.OrgAttribute], T1.[T_QWF_Org.IsOut], T1.[T_QWF_Org.ParentId], T1.[T_QWF_Org.LayerId], T1.[T_QWF_Org.OrgIdList], T1.[T_QWF_Org.OrgCodeList], T1.[T_QWF_Org.SortId], T1.[T_QWF_Org.IsDelete], T1.[T_QWF_Org.CreateTime], T1.[T_QWF_Org.UpdateTime], T1.[T_QWF_Org.IsSubNode], T1.[T_QWF_Org.Remarks], T1.[T_QWF_Org.CreateUserId], T1.[T_QWF_Org.UpdateUserId])
    FROM (
        SELECT 
            T.OrgId AS [T_QWF_Org.OrgId], 
            T.OrgCode AS [T_QWF_Org.OrgCode], 
            T.OrgName AS [T_QWF_Org.OrgName], 
            T.OrgNamePath AS [T_QWF_Org.OrgNamePath], 
            T.OrgAttribute AS [T_QWF_Org.OrgAttribute], 
            T.IsOut AS [T_QWF_Org.IsOut], 
            T.ParentId AS [T_QWF_Org.ParentId], 
            T.LayerId AS [T_QWF_Org.LayerId], 
            T.OrgIdList AS [T_QWF_Org.OrgIdList], 
            T.OrgCodeList AS [T_QWF_Org.OrgCodeList], 
            T.SortId AS [T_QWF_Org.SortId], 
            T.IsDelete AS [T_QWF_Org.IsDelete], 
            T.CreateTime AS [T_QWF_Org.CreateTime], 
            T.UpdateTime AS [T_QWF_Org.UpdateTime], 
            T.IsSubNode AS [T_QWF_Org.IsSubNode], 
            T.Remarks AS [T_QWF_Org.Remarks], 
            T.CreateUserId AS [T_QWF_Org.CreateUserId], 
            T.UpdateUserId AS [T_QWF_Org.UpdateUserId], 
            True AS _from0
        FROM DbFrameworkContext.T_QWF_Org AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkContext.T_QWF_Org.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_Org
        [DbFrameworkEntity_SQLServer.T_QWF_Org](T1.[T_QWF_Org.OrgId], T1.[T_QWF_Org.OrgCode], T1.[T_QWF_Org.OrgName], T1.[T_QWF_Org.OrgNamePath], T1.[T_QWF_Org.OrgAttribute], T1.[T_QWF_Org.IsOut], T1.[T_QWF_Org.ParentId], T1.[T_QWF_Org.LayerId], T1.[T_QWF_Org.OrgIdList], T1.[T_QWF_Org.OrgCodeList], T1.[T_QWF_Org.SortId], T1.[T_QWF_Org.IsDelete], T1.[T_QWF_Org.CreateTime], T1.[T_QWF_Org.UpdateTime], T1.[T_QWF_Org.IsSubNode], T1.[T_QWF_Org.Remarks], T1.[T_QWF_Org.CreateUserId], T1.[T_QWF_Org.UpdateUserId])
    FROM (
        SELECT 
            T.OrgId AS [T_QWF_Org.OrgId], 
            T.OrgCode AS [T_QWF_Org.OrgCode], 
            T.OrgName AS [T_QWF_Org.OrgName], 
            T.OrgNamePath AS [T_QWF_Org.OrgNamePath], 
            T.OrgAttribute AS [T_QWF_Org.OrgAttribute], 
            T.IsOut AS [T_QWF_Org.IsOut], 
            T.ParentId AS [T_QWF_Org.ParentId], 
            T.LayerId AS [T_QWF_Org.LayerId], 
            T.OrgIdList AS [T_QWF_Org.OrgIdList], 
            T.OrgCodeList AS [T_QWF_Org.OrgCodeList], 
            T.SortId AS [T_QWF_Org.SortId], 
            T.IsDelete AS [T_QWF_Org.IsDelete], 
            T.CreateTime AS [T_QWF_Org.CreateTime], 
            T.UpdateTime AS [T_QWF_Org.UpdateTime], 
            T.IsSubNode AS [T_QWF_Org.IsSubNode], 
            T.Remarks AS [T_QWF_Org.Remarks], 
            T.CreateUserId AS [T_QWF_Org.CreateUserId], 
            T.UpdateUserId AS [T_QWF_Org.UpdateUserId], 
            True AS _from0
        FROM DbFrameworkEntity_SQLServerStoreContainer.T_QWF_Org AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkEntity_SQLServerStoreContainer.T_QWF_Resource.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_Resource
        [DbFrameworkEntity_SQLServer.Store.T_QWF_Resource](T1.[T_QWF_Resource.RuleId], T1.[T_QWF_Resource.ResourceCode], T1.[T_QWF_Resource.ResourceName], T1.[T_QWF_Resource.CreateTime], T1.[T_QWF_Resource.CreateUserId], T1.[T_QWF_Resource.UpdateTime], T1.[T_QWF_Resource.UpdateUserId], T1.[T_QWF_Resource.ResourceType], T1.[T_QWF_Resource.ResourceRemarks])
    FROM (
        SELECT 
            T.RuleId AS [T_QWF_Resource.RuleId], 
            T.ResourceCode AS [T_QWF_Resource.ResourceCode], 
            T.ResourceName AS [T_QWF_Resource.ResourceName], 
            T.CreateTime AS [T_QWF_Resource.CreateTime], 
            T.CreateUserId AS [T_QWF_Resource.CreateUserId], 
            T.UpdateTime AS [T_QWF_Resource.UpdateTime], 
            T.UpdateUserId AS [T_QWF_Resource.UpdateUserId], 
            T.ResourceType AS [T_QWF_Resource.ResourceType], 
            T.ResourceRemarks AS [T_QWF_Resource.ResourceRemarks], 
            True AS _from0
        FROM DbFrameworkContext.T_QWF_Resource AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkContext.T_QWF_Resource.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_Resource
        [DbFrameworkEntity_SQLServer.T_QWF_Resource](T1.[T_QWF_Resource.RuleId], T1.[T_QWF_Resource.ResourceCode], T1.[T_QWF_Resource.ResourceName], T1.[T_QWF_Resource.CreateTime], T1.[T_QWF_Resource.CreateUserId], T1.[T_QWF_Resource.UpdateTime], T1.[T_QWF_Resource.UpdateUserId], T1.[T_QWF_Resource.ResourceType], T1.[T_QWF_Resource.ResourceRemarks])
    FROM (
        SELECT 
            T.RuleId AS [T_QWF_Resource.RuleId], 
            T.ResourceCode AS [T_QWF_Resource.ResourceCode], 
            T.ResourceName AS [T_QWF_Resource.ResourceName], 
            T.CreateTime AS [T_QWF_Resource.CreateTime], 
            T.CreateUserId AS [T_QWF_Resource.CreateUserId], 
            T.UpdateTime AS [T_QWF_Resource.UpdateTime], 
            T.UpdateUserId AS [T_QWF_Resource.UpdateUserId], 
            T.ResourceType AS [T_QWF_Resource.ResourceType], 
            T.ResourceRemarks AS [T_QWF_Resource.ResourceRemarks], 
            True AS _from0
        FROM DbFrameworkEntity_SQLServerStoreContainer.T_QWF_Resource AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkEntity_SQLServerStoreContainer.T_QWF_Role.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_Role
        [DbFrameworkEntity_SQLServer.Store.T_QWF_Role](T1.[T_QWF_Role.RoleId], T1.[T_QWF_Role.RoleCode], T1.[T_QWF_Role.RoleName], T1.[T_QWF_Role.RoleGroupId], T1.[T_QWF_Role.CreateTime], T1.[T_QWF_Role.UpdateTime], T1.[T_QWF_Role.SortId], T1.[T_QWF_Role.IsDelete], T1.[T_QWF_Role.Remarks], T1.[T_QWF_Role.CreateUserId], T1.[T_QWF_Role.UpdateUserId])
    FROM (
        SELECT 
            T.RoleId AS [T_QWF_Role.RoleId], 
            T.RoleCode AS [T_QWF_Role.RoleCode], 
            T.RoleName AS [T_QWF_Role.RoleName], 
            T.RoleGroupId AS [T_QWF_Role.RoleGroupId], 
            T.CreateTime AS [T_QWF_Role.CreateTime], 
            T.UpdateTime AS [T_QWF_Role.UpdateTime], 
            T.SortId AS [T_QWF_Role.SortId], 
            T.IsDelete AS [T_QWF_Role.IsDelete], 
            T.Remarks AS [T_QWF_Role.Remarks], 
            T.CreateUserId AS [T_QWF_Role.CreateUserId], 
            T.UpdateUserId AS [T_QWF_Role.UpdateUserId], 
            True AS _from0
        FROM DbFrameworkContext.T_QWF_Role AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkContext.T_QWF_Role.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_Role
        [DbFrameworkEntity_SQLServer.T_QWF_Role](T1.[T_QWF_Role.RoleId], T1.[T_QWF_Role.RoleCode], T1.[T_QWF_Role.RoleName], T1.[T_QWF_Role.RoleGroupId], T1.[T_QWF_Role.CreateTime], T1.[T_QWF_Role.UpdateTime], T1.[T_QWF_Role.SortId], T1.[T_QWF_Role.IsDelete], T1.[T_QWF_Role.Remarks], T1.[T_QWF_Role.CreateUserId], T1.[T_QWF_Role.UpdateUserId])
    FROM (
        SELECT 
            T.RoleId AS [T_QWF_Role.RoleId], 
            T.RoleCode AS [T_QWF_Role.RoleCode], 
            T.RoleName AS [T_QWF_Role.RoleName], 
            T.RoleGroupId AS [T_QWF_Role.RoleGroupId], 
            T.CreateTime AS [T_QWF_Role.CreateTime], 
            T.UpdateTime AS [T_QWF_Role.UpdateTime], 
            T.SortId AS [T_QWF_Role.SortId], 
            T.IsDelete AS [T_QWF_Role.IsDelete], 
            T.Remarks AS [T_QWF_Role.Remarks], 
            T.CreateUserId AS [T_QWF_Role.CreateUserId], 
            T.UpdateUserId AS [T_QWF_Role.UpdateUserId], 
            True AS _from0
        FROM DbFrameworkEntity_SQLServerStoreContainer.T_QWF_Role AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkEntity_SQLServerStoreContainer.T_QWF_RoleGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_RoleGroup
        [DbFrameworkEntity_SQLServer.Store.T_QWF_RoleGroup](T1.[T_QWF_RoleGroup.GroupId], T1.[T_QWF_RoleGroup.GroupName], T1.[T_QWF_RoleGroup.CreateTime], T1.[T_QWF_RoleGroup.UpdateTime], T1.[T_QWF_RoleGroup.GroupRemarks], T1.[T_QWF_RoleGroup.SortId], T1.[T_QWF_RoleGroup.IsDelete])
    FROM (
        SELECT 
            T.GroupId AS [T_QWF_RoleGroup.GroupId], 
            T.GroupName AS [T_QWF_RoleGroup.GroupName], 
            T.CreateTime AS [T_QWF_RoleGroup.CreateTime], 
            T.UpdateTime AS [T_QWF_RoleGroup.UpdateTime], 
            T.GroupRemarks AS [T_QWF_RoleGroup.GroupRemarks], 
            T.SortId AS [T_QWF_RoleGroup.SortId], 
            T.IsDelete AS [T_QWF_RoleGroup.IsDelete], 
            True AS _from0
        FROM DbFrameworkContext.T_QWF_RoleGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkContext.T_QWF_RoleGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_RoleGroup
        [DbFrameworkEntity_SQLServer.T_QWF_RoleGroup](T1.[T_QWF_RoleGroup.GroupId], T1.[T_QWF_RoleGroup.GroupName], T1.[T_QWF_RoleGroup.CreateTime], T1.[T_QWF_RoleGroup.UpdateTime], T1.[T_QWF_RoleGroup.GroupRemarks], T1.[T_QWF_RoleGroup.SortId], T1.[T_QWF_RoleGroup.IsDelete])
    FROM (
        SELECT 
            T.GroupId AS [T_QWF_RoleGroup.GroupId], 
            T.GroupName AS [T_QWF_RoleGroup.GroupName], 
            T.CreateTime AS [T_QWF_RoleGroup.CreateTime], 
            T.UpdateTime AS [T_QWF_RoleGroup.UpdateTime], 
            T.GroupRemarks AS [T_QWF_RoleGroup.GroupRemarks], 
            T.SortId AS [T_QWF_RoleGroup.SortId], 
            T.IsDelete AS [T_QWF_RoleGroup.IsDelete], 
            True AS _from0
        FROM DbFrameworkEntity_SQLServerStoreContainer.T_QWF_RoleGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkEntity_SQLServerStoreContainer.T_QWF_RoleInMenu.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_RoleInMenu
        [DbFrameworkEntity_SQLServer.Store.T_QWF_RoleInMenu](T1.[T_QWF_RoleInMenu.RoleId], T1.[T_QWF_RoleInMenu.MenuId], T1.[T_QWF_RoleInMenu.CreateTime], T1.[T_QWF_RoleInMenu.CreateUserId])
    FROM (
        SELECT 
            T.RoleId AS [T_QWF_RoleInMenu.RoleId], 
            T.MenuId AS [T_QWF_RoleInMenu.MenuId], 
            T.CreateTime AS [T_QWF_RoleInMenu.CreateTime], 
            T.CreateUserId AS [T_QWF_RoleInMenu.CreateUserId], 
            True AS _from0
        FROM DbFrameworkContext.T_QWF_RoleInMenu AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkContext.T_QWF_RoleInMenu.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_RoleInMenu
        [DbFrameworkEntity_SQLServer.T_QWF_RoleInMenu](T1.[T_QWF_RoleInMenu.RoleId], T1.[T_QWF_RoleInMenu.MenuId], T1.[T_QWF_RoleInMenu.CreateTime], T1.[T_QWF_RoleInMenu.CreateUserId])
    FROM (
        SELECT 
            T.RoleId AS [T_QWF_RoleInMenu.RoleId], 
            T.MenuId AS [T_QWF_RoleInMenu.MenuId], 
            T.CreateTime AS [T_QWF_RoleInMenu.CreateTime], 
            T.CreateUserId AS [T_QWF_RoleInMenu.CreateUserId], 
            True AS _from0
        FROM DbFrameworkEntity_SQLServerStoreContainer.T_QWF_RoleInMenu AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkEntity_SQLServerStoreContainer.T_QWF_RoleInResource.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_RoleInResource
        [DbFrameworkEntity_SQLServer.Store.T_QWF_RoleInResource](T1.[T_QWF_RoleInResource.RoleId], T1.[T_QWF_RoleInResource.RuleId], T1.[T_QWF_RoleInResource.CreateTime], T1.[T_QWF_RoleInResource.CreateUserId])
    FROM (
        SELECT 
            T.RoleId AS [T_QWF_RoleInResource.RoleId], 
            T.RuleId AS [T_QWF_RoleInResource.RuleId], 
            T.CreateTime AS [T_QWF_RoleInResource.CreateTime], 
            T.CreateUserId AS [T_QWF_RoleInResource.CreateUserId], 
            True AS _from0
        FROM DbFrameworkContext.T_QWF_RoleInResource AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkContext.T_QWF_RoleInResource.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_RoleInResource
        [DbFrameworkEntity_SQLServer.T_QWF_RoleInResource](T1.[T_QWF_RoleInResource.RoleId], T1.[T_QWF_RoleInResource.RuleId], T1.[T_QWF_RoleInResource.CreateTime], T1.[T_QWF_RoleInResource.CreateUserId])
    FROM (
        SELECT 
            T.RoleId AS [T_QWF_RoleInResource.RoleId], 
            T.RuleId AS [T_QWF_RoleInResource.RuleId], 
            T.CreateTime AS [T_QWF_RoleInResource.CreateTime], 
            T.CreateUserId AS [T_QWF_RoleInResource.CreateUserId], 
            True AS _from0
        FROM DbFrameworkEntity_SQLServerStoreContainer.T_QWF_RoleInResource AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkEntity_SQLServerStoreContainer.T_QWF_Seq.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_Seq
        [DbFrameworkEntity_SQLServer.Store.T_QWF_Seq](T1.[T_QWF_Seq.Code], T1.[T_QWF_Seq.Name], T1.[T_QWF_Seq.Prefix], T1.[T_QWF_Seq.DateFormart], T1.[T_QWF_Seq.SerialLength], T1.[T_QWF_Seq.CurrentNumber])
    FROM (
        SELECT 
            T.Code AS [T_QWF_Seq.Code], 
            T.Name AS [T_QWF_Seq.Name], 
            T.Prefix AS [T_QWF_Seq.Prefix], 
            T.DateFormart AS [T_QWF_Seq.DateFormart], 
            T.SerialLength AS [T_QWF_Seq.SerialLength], 
            T.CurrentNumber AS [T_QWF_Seq.CurrentNumber], 
            True AS _from0
        FROM DbFrameworkContext.T_QWF_Seq AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkContext.T_QWF_Seq.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_Seq
        [DbFrameworkEntity_SQLServer.T_QWF_Seq](T1.[T_QWF_Seq.Code], T1.[T_QWF_Seq.Name], T1.[T_QWF_Seq.Prefix], T1.[T_QWF_Seq.DateFormart], T1.[T_QWF_Seq.SerialLength], T1.[T_QWF_Seq.CurrentNumber])
    FROM (
        SELECT 
            T.Code AS [T_QWF_Seq.Code], 
            T.Name AS [T_QWF_Seq.Name], 
            T.Prefix AS [T_QWF_Seq.Prefix], 
            T.DateFormart AS [T_QWF_Seq.DateFormart], 
            T.SerialLength AS [T_QWF_Seq.SerialLength], 
            T.CurrentNumber AS [T_QWF_Seq.CurrentNumber], 
            True AS _from0
        FROM DbFrameworkEntity_SQLServerStoreContainer.T_QWF_Seq AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkEntity_SQLServerStoreContainer.T_QWF_User.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView22()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_User
        [DbFrameworkEntity_SQLServer.Store.T_QWF_User](T1.[T_QWF_User.UserId], T1.[T_QWF_User.UserCode], T1.[T_QWF_User.UserName], T1.[T_QWF_User.PassWord], T1.[T_QWF_User.OrgId], T1.[T_QWF_User.Leader], T1.[T_QWF_User.LastLoginIp], T1.[T_QWF_User.LastLoginTime], T1.[T_QWF_User.UserStatus], T1.[T_QWF_User.IsDelete], T1.[T_QWF_User.QQ], T1.[T_QWF_User.Realname], T1.[T_QWF_User.Tel], T1.[T_QWF_User.Phone], T1.[T_QWF_User.Email], T1.[T_QWF_User.Position], T1.[T_QWF_User.UpdateTime], T1.[T_QWF_User.CreateTime], T1.[T_QWF_User.Weixin], T1.[T_QWF_User.Fax], T1.[T_QWF_User.UserRemarks], T1.[T_QWF_User.CreateUserId], T1.[T_QWF_User.UpdateUserId])
    FROM (
        SELECT 
            T.UserId AS [T_QWF_User.UserId], 
            T.UserCode AS [T_QWF_User.UserCode], 
            T.UserName AS [T_QWF_User.UserName], 
            T.PassWord AS [T_QWF_User.PassWord], 
            T.OrgId AS [T_QWF_User.OrgId], 
            T.Leader AS [T_QWF_User.Leader], 
            T.LastLoginIp AS [T_QWF_User.LastLoginIp], 
            T.LastLoginTime AS [T_QWF_User.LastLoginTime], 
            T.UserStatus AS [T_QWF_User.UserStatus], 
            T.IsDelete AS [T_QWF_User.IsDelete], 
            T.QQ AS [T_QWF_User.QQ], 
            T.Realname AS [T_QWF_User.Realname], 
            T.Tel AS [T_QWF_User.Tel], 
            T.Phone AS [T_QWF_User.Phone], 
            T.Email AS [T_QWF_User.Email], 
            T.Position AS [T_QWF_User.Position], 
            T.UpdateTime AS [T_QWF_User.UpdateTime], 
            T.CreateTime AS [T_QWF_User.CreateTime], 
            T.Weixin AS [T_QWF_User.Weixin], 
            T.Fax AS [T_QWF_User.Fax], 
            T.UserRemarks AS [T_QWF_User.UserRemarks], 
            T.CreateUserId AS [T_QWF_User.CreateUserId], 
            T.UpdateUserId AS [T_QWF_User.UpdateUserId], 
            True AS _from0
        FROM DbFrameworkContext.T_QWF_User AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkContext.T_QWF_User.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView23()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_User
        [DbFrameworkEntity_SQLServer.T_QWF_User](T1.[T_QWF_User.UserId], T1.[T_QWF_User.UserCode], T1.[T_QWF_User.UserName], T1.[T_QWF_User.PassWord], T1.[T_QWF_User.OrgId], T1.[T_QWF_User.Leader], T1.[T_QWF_User.LastLoginIp], T1.[T_QWF_User.LastLoginTime], T1.[T_QWF_User.UserStatus], T1.[T_QWF_User.IsDelete], T1.[T_QWF_User.QQ], T1.[T_QWF_User.Realname], T1.[T_QWF_User.Tel], T1.[T_QWF_User.Phone], T1.[T_QWF_User.Email], T1.[T_QWF_User.Position], T1.[T_QWF_User.UpdateTime], T1.[T_QWF_User.CreateTime], T1.[T_QWF_User.Weixin], T1.[T_QWF_User.Fax], T1.[T_QWF_User.UserRemarks], T1.[T_QWF_User.CreateUserId], T1.[T_QWF_User.UpdateUserId])
    FROM (
        SELECT 
            T.UserId AS [T_QWF_User.UserId], 
            T.UserCode AS [T_QWF_User.UserCode], 
            T.UserName AS [T_QWF_User.UserName], 
            T.PassWord AS [T_QWF_User.PassWord], 
            T.OrgId AS [T_QWF_User.OrgId], 
            T.Leader AS [T_QWF_User.Leader], 
            T.LastLoginIp AS [T_QWF_User.LastLoginIp], 
            T.LastLoginTime AS [T_QWF_User.LastLoginTime], 
            T.UserStatus AS [T_QWF_User.UserStatus], 
            T.IsDelete AS [T_QWF_User.IsDelete], 
            T.QQ AS [T_QWF_User.QQ], 
            T.Realname AS [T_QWF_User.Realname], 
            T.Tel AS [T_QWF_User.Tel], 
            T.Phone AS [T_QWF_User.Phone], 
            T.Email AS [T_QWF_User.Email], 
            T.Position AS [T_QWF_User.Position], 
            T.UpdateTime AS [T_QWF_User.UpdateTime], 
            T.CreateTime AS [T_QWF_User.CreateTime], 
            T.Weixin AS [T_QWF_User.Weixin], 
            T.Fax AS [T_QWF_User.Fax], 
            T.UserRemarks AS [T_QWF_User.UserRemarks], 
            T.CreateUserId AS [T_QWF_User.CreateUserId], 
            T.UpdateUserId AS [T_QWF_User.UpdateUserId], 
            True AS _from0
        FROM DbFrameworkEntity_SQLServerStoreContainer.T_QWF_User AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkEntity_SQLServerStoreContainer.T_QWF_UserActionLog.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView24()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_UserActionLog
        [DbFrameworkEntity_SQLServer.Store.T_QWF_UserActionLog](T1.[T_QWF_UserActionLog.Id], T1.[T_QWF_UserActionLog.UserId], T1.[T_QWF_UserActionLog.UserCode], T1.[T_QWF_UserActionLog.UserName], T1.[T_QWF_UserActionLog.LogCode], T1.[T_QWF_UserActionLog.LogType], T1.[T_QWF_UserActionLog.UserIp], T1.[T_QWF_UserActionLog.ActionMethod], T1.[T_QWF_UserActionLog.LogDescription], T1.[T_QWF_UserActionLog.LogItems], T1.[T_QWF_UserActionLog.CreateTime])
    FROM (
        SELECT 
            T.Id AS [T_QWF_UserActionLog.Id], 
            T.UserId AS [T_QWF_UserActionLog.UserId], 
            T.UserCode AS [T_QWF_UserActionLog.UserCode], 
            T.UserName AS [T_QWF_UserActionLog.UserName], 
            T.LogCode AS [T_QWF_UserActionLog.LogCode], 
            T.LogType AS [T_QWF_UserActionLog.LogType], 
            T.UserIp AS [T_QWF_UserActionLog.UserIp], 
            T.ActionMethod AS [T_QWF_UserActionLog.ActionMethod], 
            T.LogDescription AS [T_QWF_UserActionLog.LogDescription], 
            T.LogItems AS [T_QWF_UserActionLog.LogItems], 
            T.CreateTime AS [T_QWF_UserActionLog.CreateTime], 
            True AS _from0
        FROM DbFrameworkContext.T_QWF_UserActionLog AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkContext.T_QWF_UserActionLog.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView25()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_UserActionLog
        [DbFrameworkEntity_SQLServer.T_QWF_UserActionLog](T1.[T_QWF_UserActionLog.Id], T1.[T_QWF_UserActionLog.UserId], T1.[T_QWF_UserActionLog.UserCode], T1.[T_QWF_UserActionLog.UserName], T1.[T_QWF_UserActionLog.LogCode], T1.[T_QWF_UserActionLog.LogType], T1.[T_QWF_UserActionLog.UserIp], T1.[T_QWF_UserActionLog.ActionMethod], T1.[T_QWF_UserActionLog.LogDescription], T1.[T_QWF_UserActionLog.LogItems], T1.[T_QWF_UserActionLog.CreateTime])
    FROM (
        SELECT 
            T.Id AS [T_QWF_UserActionLog.Id], 
            T.UserId AS [T_QWF_UserActionLog.UserId], 
            T.UserCode AS [T_QWF_UserActionLog.UserCode], 
            T.UserName AS [T_QWF_UserActionLog.UserName], 
            T.LogCode AS [T_QWF_UserActionLog.LogCode], 
            T.LogType AS [T_QWF_UserActionLog.LogType], 
            T.UserIp AS [T_QWF_UserActionLog.UserIp], 
            T.ActionMethod AS [T_QWF_UserActionLog.ActionMethod], 
            T.LogDescription AS [T_QWF_UserActionLog.LogDescription], 
            T.LogItems AS [T_QWF_UserActionLog.LogItems], 
            T.CreateTime AS [T_QWF_UserActionLog.CreateTime], 
            True AS _from0
        FROM DbFrameworkEntity_SQLServerStoreContainer.T_QWF_UserActionLog AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkEntity_SQLServerStoreContainer.T_QWF_UserInRole.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView26()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_UserInRole
        [DbFrameworkEntity_SQLServer.Store.T_QWF_UserInRole](T1.[T_QWF_UserInRole.Id], T1.[T_QWF_UserInRole.RoleId], T1.[T_QWF_UserInRole.UserId], T1.[T_QWF_UserInRole.CreateTime], T1.[T_QWF_UserInRole.CreateUserId])
    FROM (
        SELECT 
            T.Id AS [T_QWF_UserInRole.Id], 
            T.RoleId AS [T_QWF_UserInRole.RoleId], 
            T.UserId AS [T_QWF_UserInRole.UserId], 
            T.CreateTime AS [T_QWF_UserInRole.CreateTime], 
            T.CreateUserId AS [T_QWF_UserInRole.CreateUserId], 
            True AS _from0
        FROM DbFrameworkContext.T_QWF_UserInRole AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for DbFrameworkContext.T_QWF_UserInRole.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView27()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing T_QWF_UserInRole
        [DbFrameworkEntity_SQLServer.T_QWF_UserInRole](T1.[T_QWF_UserInRole.Id], T1.[T_QWF_UserInRole.RoleId], T1.[T_QWF_UserInRole.UserId], T1.[T_QWF_UserInRole.CreateTime], T1.[T_QWF_UserInRole.CreateUserId])
    FROM (
        SELECT 
            T.Id AS [T_QWF_UserInRole.Id], 
            T.RoleId AS [T_QWF_UserInRole.RoleId], 
            T.UserId AS [T_QWF_UserInRole.UserId], 
            T.CreateTime AS [T_QWF_UserInRole.CreateTime], 
            T.CreateUserId AS [T_QWF_UserInRole.CreateUserId], 
            True AS _from0
        FROM DbFrameworkEntity_SQLServerStoreContainer.T_QWF_UserInRole AS T
    ) AS T1");
        }
    }
}
